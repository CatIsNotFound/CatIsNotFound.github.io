<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>CatIsNotFound • Posts by &#34;github&#34; tag</title>
        <link>https://CatIsNotFound.github.io</link>
        <description>一个基于 Hexo 框架的个人博客网站</description>
        <language>zh-CN</language>
        <pubDate>Wed, 27 Nov 2024 11:58:30 +0800</pubDate>
        <lastBuildDate>Wed, 27 Nov 2024 11:58:30 +0800</lastBuildDate>
        <category>软件安利</category>
        <category>Windows</category>
        <category>新手向</category>
        <category>更新日志</category>
        <category>Waline</category>
        <category>Python</category>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>Ubuntu</category>
        <category>GNOME</category>
        <category>桌面环境</category>
        <category>博客搭建</category>
        <category>Git</category>
        <category>Github</category>
        <category>Hexo</category>
        <category>Android</category>
        <category>WSL</category>
        <category>脚本</category>
        <category>关于博客</category>
        <category>系统体验</category>
        <category>Pop_OS!</category>
        <category>Cosmic</category>
        <category>Switch</category>
        <category>Youtube</category>
        <category>任天堂</category>
        <category>油管</category>
        <category>C_and_Cpp</category>
        <category>oh-my-zsh</category>
        <category>解题历程</category>
        <category>💡解题</category>
        <category>刷题</category>
        <category>答疑解惑</category>
        <category>Nintendo</category>
        <category>游戏机</category>
        <category>记录日常</category>
        <category>年终总结</category>
        <category>Codeforces</category>
        <item>
            <guid isPermalink="true">https://catisnotfound.github.io/2024/11/%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0-Oh-my-zsh-%E5%93%A6-%E6%88%91%E9%82%A3%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF/</guid>
            <title>[折腾日记] Oh-my-zsh 哦~我那好用的终端</title>
            <link>https://catisnotfound.github.io/2024/11/%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0-Oh-my-zsh-%E5%93%A6-%E6%88%91%E9%82%A3%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF/</link>
            <category>新手向</category>
            <category>Linux</category>
            <category>Git</category>
            <category>Github</category>
            <category>WSL</category>
            <category>oh-my-zsh</category>
            <pubDate>Wed, 27 Nov 2024 11:58:30 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;写在最前&#34;&gt;&lt;a href=&#34;#写在最前&#34; class=&#34;headerlink&#34; title=&#34;写在最前&#34;&gt;&lt;/a&gt;写在最前&lt;/h1&gt;&lt;p&gt;写这篇文章的初衷主要是为了记录曾经在 Linux 上折腾过的各种过程，并将其写成类似于学习教程的形式以此来帮助跟作者本人一样在折腾 Linux 的人。&lt;/p&gt;
&lt;p&gt;如果你也正在折腾 Linux，那么请简要阅读这篇文章，希望这能有所帮助。 (￣︶￣*)&lt;/p&gt;
&lt;h1 id=&#34;折腾环境&#34;&gt;&lt;a href=&#34;#折腾环境&#34; class=&#34;headerlink&#34; title=&#34;折腾环境&#34;&gt;&lt;/a&gt;折腾环境&lt;/h1&gt;&lt;p&gt;这里本人使用的是基于 WSL 2 下的 Debian 发行版系统，&lt;/p&gt;
&lt;p&gt;如果你已安装 WSL，可直接执行如下：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Powershell&#34;&gt;&lt;figure class=&#34;iseeu highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wsl.exe &lt;span class=&#34;literal&#34;&gt;--install&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;-d&lt;/span&gt; debian&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;当然，如果需要其它可安装的发行版系统，可直接执行：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wsl.exe -l -o&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;如果未安装 WSL？不如看看这篇？&lt;/p&gt;
&lt;a class=&#34;button  center large&#34; href=&#39;/2024/06/WSL：一个适用于-Windows-的-Linux-子系统/&#39; title=&#39;WSL：一个适用于 Windows 的 Linux 子系统&#39;&gt;&lt;i class=&#39;fas fa-link&#39;&gt;&lt;/i&gt; WSL：一个适用于 Windows 的 Linux 子系统&lt;/a&gt;

&lt;h1 id=&#34;折腾全过程&#34;&gt;&lt;a href=&#34;#折腾全过程&#34; class=&#34;headerlink&#34; title=&#34;折腾全过程&#34;&gt;&lt;/a&gt;折腾全过程&lt;/h1&gt;&lt;p&gt;很显然，默认环境下的 WSL 除了勉强能用的 &lt;kbd&gt;Tab&lt;/kbd&gt; 命令&amp;#x2F;目录补全、&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt; 历史记录回溯之外，貌似啥也没有了(ˉ▽ˉ；)…&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;debian@DESKTOP-EPQI5KJ:~$ _&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;是的，就是这样。一个平平无奇的交互界面。&lt;/p&gt;
&lt;p&gt;但为了能更好地改造交互，不仅要改变外观，还要增加其可用程度。以下是本人折腾时的简要过程。&lt;/p&gt;
&lt;h2 id=&#34;1-安装必需软件包&#34;&gt;&lt;a href=&#34;#1-安装必需软件包&#34; class=&#34;headerlink&#34; title=&#34;1. 安装必需软件包&#34;&gt;&lt;/a&gt;1. 安装必需软件包&lt;/h2&gt;&lt;p&gt;很显然，要想改变这一切，需要先改变当前的 Shell 环境。欲查看当前的环境，只需执行：&lt;code&gt;echo $SHELL&lt;/code&gt;。这里作者默认使用 Bash 环境，其输出为：&lt;code&gt;/bin/bash&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;不过在此之前，首先就是需要使用 APT 包管理器来安装所需要的软件包。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：这里的 APT 不是想象的那个 APT，而是那个具有超级牛力的 APT [doge]。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;执行命令如下：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; apt install git zsh curl vim neofetch -y &lt;span class=&#34;comment&#34;&gt;# 这里的 neofetch 可不装，这里纯粹是为了装 X 用的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;💡 关于下载速度慢的解决方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用 APT 时出现下载慢？很可能是因为💿&lt;strong&gt;镜像源&lt;/strong&gt;，要想改善其下载速度，&lt;strong&gt;直接修改镜像源即可&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这里作者使用清华源镜像以加速，当然还可以用其它的开源镜像站。&lt;/p&gt;
&lt;p&gt;你只需要执行如下命令，即可一次性完成替换镜像源：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; &amp;gt; /etc/apt/sources.list &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;EOF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;# deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;EOF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;步骤 2：更新软件源&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; apt update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;步骤 3：下载到一半时取消？直接带上 &lt;code&gt;--fix-missing&lt;/code&gt; 选项就可以继续未完成的下载了O(∩_∩)O。&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; apt install git zsh curl vim neofetch -y --fix-missing&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-切换-Shell-环境&#34;&gt;&lt;a href=&#34;#2-切换-Shell-环境&#34; class=&#34;headerlink&#34; title=&#34;2. 切换 Shell 环境&#34;&gt;&lt;/a&gt;2. 切换 Shell 环境&lt;/h2&gt;&lt;p&gt;当你完成了下载以及安装之后，执行如下命令，可直接将 Bash 更改为 Zsh 环境&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; chsh -s /bin/zsh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;执行后，只需重新登录此用户，你会看到如下提示界面：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;This is the Z Shell configuration function for new users,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zsh-newuser-install.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You are seeing this message because you have no zsh startup files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~).  This function can help you with a few settings that should&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make your use of the shell easier.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You can:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(q)  Quit and do nothing.  The function will be run again next time.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(0)  Exit, creating the file ~/.zshrc containing just a comment.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     That will prevent this function being run again.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(1)  Continue to the main menu.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(2)  Populate your ~/.zshrc with the configuration recommended&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     by the system administrator and exit (you will need to edit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     the file by hand, if so desired).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--- Type one of the keys in parentheses ---&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;没错，到这里已经是完成了一部分！此步骤下，可以直接按下 &lt;code&gt;0&lt;/code&gt;，不做任何配置即可。之后，你会看到全新的命令行显示。如下：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Shell&#34;&gt;&lt;figure class=&#34;iseeu highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;DESKTOP-EPQI5KJ% &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;h2 id=&#34;3-安装与配置-Oh-my-zsh&#34;&gt;&lt;a href=&#34;#3-安装与配置-Oh-my-zsh&#34; class=&#34;headerlink&#34; title=&#34;3. 安装与配置 Oh-my-zsh&#34;&gt;&lt;/a&gt;3. 安装与配置 Oh-my-zsh&lt;/h2&gt;&lt;p&gt;虽然，已经成功了一部分，但还是缺少了灵魂。为了能让自己的 zsh 变得更极具美观，安装 oh-my-zsh 或许是一个非常不错的一种方式。&lt;/p&gt;
&lt;h3 id=&#34;安装-Oh-my-zsh&#34;&gt;&lt;a href=&#34;#安装-Oh-my-zsh&#34; class=&#34;headerlink&#34; title=&#34;安装 Oh-my-zsh&#34;&gt;&lt;/a&gt;安装 Oh-my-zsh&lt;/h3&gt;&lt;p&gt;这里为了方便国内用户下载 Oh-my-zsh，这里就直接&lt;strong&gt;采用清华源下载的方法&lt;/strong&gt;来执行如下操作：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;详情说明见：&lt;a class=&#34;link&#34;   href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/ohmyzsh.git/&#34; &gt;ohmyzsh.git | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ~/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://mirrors.tuna.tsinghua.edu.cn/git/ohmyzsh.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ohmyzsh/tools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;REMOTE=https://mirrors.tuna.tsinghua.edu.cn/git/ohmyzsh.git sh install.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;等待一系列操作后，你将会看到安装成功的画面：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Looking for an existing zsh config...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Found /home/test/.zshrc. Backing up to /home/test/.zshrc.pre-oh-my-zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Using the Oh My Zsh template file and adding it to /home/test/.zshrc.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         __                                     __&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ____  / /_     ____ ___  __  __   ____  _____/ /_&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        /____/                       ....is now installed!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Before you scream Oh My Zsh! look over the `.zshrc` file to select plugins, themes, and options.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• Follow us on X: https://x.com/ohmyzsh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• Join our Discord community: https://discord.gg/ohmyzsh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• Get stickers, t-shirts, coffee mugs and more: https://shop.planetargon.com/collections/oh-my-zsh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  tools _&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;h3 id=&#34;配置我的-zsh&#34;&gt;&lt;a href=&#34;#配置我的-zsh&#34; class=&#34;headerlink&#34; title=&#34;配置我的 zsh&#34;&gt;&lt;/a&gt;配置我的 zsh&lt;/h3&gt;&lt;p&gt;是的，当你看到如上的画面时，Oh-my-zsh 的安装就已经完成了！不过，这要怎么配置我的 zsh 呢？&lt;/p&gt;
&lt;p&gt;直接利用 vim 打开 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件，在这里你可以添加插件以及修改正在使用的主题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示：以下所提到的主题、插件等配置都需要在  &lt;code&gt;~/.zshrc&lt;/code&gt; 配置文件中修改。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-改变主题&#34;&gt;&lt;a href=&#34;#1-改变主题&#34; class=&#34;headerlink&#34; title=&#34;(1) 改变主题&#34;&gt;&lt;/a&gt;(1) 改变主题&lt;/h4&gt;&lt;p&gt;在 &lt;code&gt;ZSH_THEME&lt;/code&gt; 变量中修改对应主题&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ZSH_THEME=&lt;span class=&#34;string&#34;&gt;&amp;quot;robbyrussell&amp;quot;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 默认主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ZSH_THEME=&lt;span class=&#34;string&#34;&gt;&amp;quot;random&amp;quot;&lt;/span&gt; 		 &lt;span class=&#34;comment&#34;&gt;# 不确定或有多个常用外观的情况下，random 是个不错的选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;关于所有可用的主题，执行：&lt;code&gt;ls -1 $ZSH/themes | cut -d &amp;#39;.&amp;#39; -f1 | less&lt;/code&gt; 可直接查看。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于主题预览，可直接访问：&lt;a class=&#34;link&#34;   href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&#34; &gt;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当你遇到不太确定的主题或者遇到喜欢多个主题时，在 &lt;code&gt;ZSH_THEME&lt;/code&gt; 变量中设置为 &lt;code&gt;random&lt;/code&gt; 是个很不错的主意(*￣3￣)╭（如果你真心找不到什么特别好看的主题）&lt;/p&gt;
&lt;p&gt;当你设置成随机主题时，再次重新登录时，你会看到类似这样的画面：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[oh-my-zsh] Random theme &lt;span class=&#34;string&#34;&gt;&amp;#x27;juanghurtado&amp;#x27;&lt;/span&gt; loaded&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;@DESKTOP-EPQI5KJ:/home/debian&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; _&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;除了上面的提示，你还可以直接通过 &lt;code&gt;echo $RANDOM_THEME&lt;/code&gt; 来查看随机到的主题名称。&lt;/p&gt;
&lt;p&gt;如果你遇到了几个比较满意的主题，可以直接将其记录到 &lt;code&gt;ZSH_THEME_RANDOM_CANDIDATES&lt;/code&gt; 变量中，这样以后每次登录都只会在此变量中随机选择主题。&lt;/p&gt;
&lt;p&gt;例如：作者就对 &lt;code&gt;juanghurtado&lt;/code&gt;, &lt;code&gt;essembeh&lt;/code&gt;, &lt;code&gt;tjkirch&lt;/code&gt;, &lt;code&gt;apple&lt;/code&gt; 等主题感兴趣，那么可以将这几个主题都填入到该变量中。内容如下：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ZSH_THEME_RANDOM_CANDIDATES=( &lt;span class=&#34;string&#34;&gt;&amp;quot;juanghurtado&amp;quot;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;essembeh&amp;quot;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;tjkirch&amp;quot;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;apple&amp;quot;&lt;/span&gt; ) &lt;span class=&#34;comment&#34;&gt;# 注意空格分隔&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意：此变量大约在文件的第 18 行左右，只需将最前面的 &lt;code&gt;#&lt;/code&gt; 去掉即可。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-通用插件&#34;&gt;&lt;a href=&#34;#2-通用插件&#34; class=&#34;headerlink&#34; title=&#34;(2) 通用插件&#34;&gt;&lt;/a&gt;(2) 通用插件&lt;/h4&gt;&lt;p&gt;为了能够让终端变得更加好用，首先来推荐几个内置的 ZSH 插件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;aliases&lt;/code&gt;：基于 &lt;code&gt;alias&lt;/code&gt; 命令，可快速搜索短命令（简写命令）；其命令为 &lt;code&gt;als&lt;/code&gt;。&lt;a class=&#34;link&#34;   href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/aliases&#34; &gt;点此查看所有用法&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;简要用法 1：&lt;code&gt;als -g git&lt;/code&gt; 查看 &lt;code&gt;git&lt;/code&gt; 组下的所有短命令；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;👍 &lt;strong&gt;简要用法 2&lt;/strong&gt;：&lt;code&gt;als &amp;lt;keys&amp;gt;&lt;/code&gt; 搜索包含 &lt;code&gt;&amp;lt;keys&amp;gt;&lt;/code&gt; 的命令以及短命令；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简要用法 3：&lt;code&gt;als --groups&lt;/code&gt; 查看所有组；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tips：这对于经常使用 &lt;code&gt;git&lt;/code&gt; 命令的人群而言非常有用！&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;git&lt;/code&gt;：默认启用的插件，提供更多的&lt;a class=&#34;link&#34;   href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git#aliases&#34; &gt;短命令&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;以及更有用的&lt;a class=&#34;link&#34;   href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git#functions&#34; &gt;函数&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可直接搭配 &lt;code&gt;aliases&lt;/code&gt; 查看所有关于 git 的短命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo&lt;/code&gt;：启用后，只需按下两次 &lt;kbd&gt;Esc&lt;/kbd&gt; 就能在行前自动添加&amp;#x2F;删除 &lt;code&gt;sudo&lt;/code&gt; 前缀；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;z&lt;/code&gt;：显示 &amp;#x2F; 快速进入最常访问的目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认下，执行 &lt;code&gt;z&lt;/code&gt; 命令，会显示前几个访问频率最高的目录；&lt;/li&gt;
&lt;li&gt;在命令行下依次键入 &lt;code&gt;z&lt;/code&gt;  、&lt;kbd&gt;Space&lt;/kbd&gt;  后，连续按下 &lt;kbd&gt;Tab&lt;/kbd&gt; 键，可以进入经常访问过的目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;zsh-navigation-tools&lt;/code&gt;：命令历史记录回溯改良版，按下 &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt; 键可快速搜索之前使用过的命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;TIPS：关于所有自带插件，请详见：&lt;a class=&#34;link&#34;   href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins&#34; &gt;Plugins · ohmyzsh&amp;#x2F;ohmyzsh Wiki&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;这里就推荐几个 Github 上非常好用的几款 ZSH 插件，以提升使用效率。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zsh-autosuggestions&lt;/code&gt;：自动建议工具，根据命令历史记录来自动完成命令；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zsh-completions&lt;/code&gt;：自动补全命令工具，可通过 &lt;kbd&gt;Tab&lt;/kbd&gt; 键以快速补全各种常用命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zsh-syntax-highlighting&lt;/code&gt;：语法检查高亮工具，可检查当前输入的命令以标记不同的颜色；&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;以上推荐的额外插件，均可通过 github 上下载。对应链接如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34;   href=&#34;https://github.com/zsh-users/zsh-autosuggestions&#34; &gt;https://github.com/zsh-users/zsh-autosuggestions&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34;   href=&#34;https://github.com/zsh-users/zsh-completions&#34; &gt;https://github.com/zsh-users/zsh-completions&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34;   href=&#34;https://github.com/zsh-users/zsh-syntax-highlighting&#34; &gt;https://github.com/zsh-users/zsh-syntax-highlighting&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;国内若不能直接访问 Github，那么，请尝试使用 gitee，对应链接如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34;   href=&#34;https://gitee.com/sasukeZhou/zsh-autosuggestions&#34; &gt;https://gitee.com/sasukeZhou/zsh-autosuggestions&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34;   href=&#34;https://gitee.com/yuhldr/zsh-completions&#34; &gt;https://gitee.com/yuhldr/zsh-completions&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34;   href=&#34;https://gitee.com/minhanghuang/zsh-syntax-highlighting&#34; &gt;https://gitee.com/minhanghuang/zsh-syntax-highlighting&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;3-添加插件&#34;&gt;&lt;a href=&#34;#3-添加插件&#34; class=&#34;headerlink&#34; title=&#34;(3) 添加插件&#34;&gt;&lt;/a&gt;(3) 添加插件&lt;/h4&gt;&lt;p&gt;欲添加插件，可以在 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件中的 &lt;code&gt;plugins&lt;/code&gt; 变量来进行添加，具体如下例：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;plugins=(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    aliases&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    z&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zsh-navigation-tools&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zsh-autosuggestions&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zsh-completions&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zsh-syntax-highlighting&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;对于第三方插件（自行下载的插件）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要想添加插件，有以下几种方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;👍 Git 安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以安装 &lt;code&gt;zsh-autosuggestions&lt;/code&gt; 为例：&lt;/p&gt;
&lt;p&gt;可直接通过命令以实现安装：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/zsh-users/zsh-autosuggestions.git &lt;span class=&#34;variable&#34;&gt;$ZSH_CUSTOM&lt;/span&gt;/plugins/zsh-autosuggestions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;手动安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;还是以安装 &lt;code&gt;zsh-autosuggestions&lt;/code&gt; 为例，&lt;/p&gt;
&lt;p&gt;在浏览器中&lt;a class=&#34;link&#34;   href=&#34;https://github.com/zsh-users/zsh-autosuggestions/releases/tag/v0.7.1&#34; &gt;点击下载&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;对应的压缩包 &lt;code&gt;(*.zip)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;解压压缩包，将解压后的文件复制到 &lt;code&gt;$ZSH_CUSTOM/plugins/&lt;/code&gt; 目录下。具体命令如下：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Sh&#34;&gt;&lt;figure class=&#34;iseeu highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;unzip zsh-autosuggestions-0.7.1.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; -r zsh-autosuggestions-0.7.1 &lt;span class=&#34;variable&#34;&gt;$ZSH_CUSTOM&lt;/span&gt;/plugins/zsh-autosuggestions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意：这里的 &lt;code&gt;zsh-autosuggestions-0.7.1&lt;/code&gt; 为解压后的文件夹名称，请根据实际情况进行修改；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：若当前发行版系统找不到 &lt;code&gt;unzip&lt;/code&gt; 命令，请自行通过 apt 安装 &lt;code&gt;unzip&lt;/code&gt; 软件包。具体命令为：&lt;code&gt;sudo apt install unzip -y&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;写在最后&#34;&gt;&lt;a href=&#34;#写在最后&#34; class=&#34;headerlink&#34; title=&#34;写在最后&#34;&gt;&lt;/a&gt;写在最后&lt;/h1&gt;&lt;p&gt;关于下一篇内容，个人考虑在 Neovim 上入手，如果有较强的折腾能力，可以尝试将 neovim 改造成一个命令行下的 IDE(*^_^*)。&lt;/p&gt;
&lt;p&gt;还是那句话：感兴趣？建议点个收藏或关注？(￣▽￣)”（多少有点不好意思）&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://catisnotfound.github.io/2024/09/%E7%96%91%E9%9A%BE%E8%A7%A3%E7%AD%94-%E5%85%B3%E4%BA%8E-Github-%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
            <title>[答疑解惑] 关于 Github 的问题解决方法</title>
            <link>https://catisnotfound.github.io/2024/09/%E7%96%91%E9%9A%BE%E8%A7%A3%E7%AD%94-%E5%85%B3%E4%BA%8E-Github-%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
            <category>新手向</category>
            <category>Git</category>
            <category>Github</category>
            <category>答疑解惑</category>
            <pubDate>Sun, 01 Sep 2024 12:48:45 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://askanydifference.com/wp-content/uploads/2023/06/github.jpg&#34; alt=&#34;Github&#34; width=&#34;75%&#34;&gt;

&lt;p&gt;Github 是一个很常用的代码托管平台，我们可以利用此平台下载或克隆到优质的代码仓库，但是在某些情况下，我们可能会遇到一些问题，下面是由本人列举的一些问题与解决方法，希望这能有所帮助😉。&lt;/p&gt;
&lt;h1 id=&#34;1、Github-访问不了&#34;&gt;&lt;a href=&#34;#1、Github-访问不了&#34; class=&#34;headerlink&#34; title=&#34;1、Github 访问不了&#34;&gt;&lt;/a&gt;1、Github 访问不了&lt;/h1&gt;&lt;p&gt;大多数国内的用户在访问 Github 时总会遇到加载速度缓慢，甚至无法访问站点的情况。关于此类问题，有以下几个方法解决：&lt;/p&gt;
&lt;h2 id=&#34;1-1-利用-Watt-Toolkit-加速访问-👍&#34;&gt;&lt;a href=&#34;#1-1-利用-Watt-Toolkit-加速访问-👍&#34; class=&#34;headerlink&#34; title=&#34;1.1 利用 Watt Toolkit 加速访问 👍&#34;&gt;&lt;/a&gt;1.1 利用 Watt Toolkit 加速访问 👍&lt;/h2&gt;&lt;p&gt;众所周知，Watt Toolkit (Steam++ 前身) 是一个非常适合新手的软件，你仅需在【网络加速】页面上勾选上 &lt;i class=&#34;fa-brands fa-github&#34;&gt;&lt;/i&gt; Github 选项，点击 [立即加速] 即可。这也是本人最为推荐的方法。&lt;/p&gt;
&lt;a class=&#34;button  center large&#34; href=&#39;https://steampp.net/&#39; title=&#39;Watt Toolkit 下载&#39;&gt;&lt;i class=&#39;fa-solid fa-download&#39;&gt;&lt;/i&gt; Watt Toolkit 下载&lt;/a&gt;

&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0901/1.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-2-使用代理加速访问&#34;&gt;&lt;a href=&#34;#1-2-使用代理加速访问&#34; class=&#34;headerlink&#34; title=&#34;1.2 使用代理加速访问&#34;&gt;&lt;/a&gt;1.2 使用代理加速访问&lt;/h2&gt;&lt;p&gt;如果有经济条件，使用代理服务器是非常不错的选择。现如今，本人最推荐的是以下两款主流的代理软件：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;V2rayNG&lt;/strong&gt;：一个基于 v2ray 的免费开源软件，支持 Windows、Android、iOS 等平台。&lt;/p&gt;
&lt;a class=&#34;button  center large&#34; href=&#39;https://github.com/2dust/v2rayNG/releases&#39; title=&#39;V2rayNG 下载&#39;&gt;&lt;i class=&#39;fa-brands fa-github&#39;&gt;&lt;/i&gt; V2rayNG 下载&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;Clash 小猫咪&lt;/strong&gt;：一个开源的代理软件，支持 Windows、Android、iOS 等平台。&lt;/p&gt;
&lt;a class=&#34;button  center large&#34; href=&#39;https://github.com/clashdownload/Clash&#39; title=&#39;Clash 下载&#39;&gt;&lt;i class=&#39;fa-brands fa-github&#39;&gt;&lt;/i&gt; Clash 下载&lt;/a&gt;

&lt;p&gt;如果需要追求网络稳定、快速，那么&lt;strong&gt;购买靠谱的节点或机场&lt;/strong&gt;是不错的选择。反之，如果没有经济条件，选择&lt;strong&gt;免费节点&lt;/strong&gt;也是不错的选择，但不能保证网络一直稳定、快速。&lt;/p&gt;
&lt;p&gt;关于免费节点的获取，本文就不分享免费节点站点了，请自行使用必应或 Google 搜索。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：寻找免费节点时，请尽量不要使用百度搜索！&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;2、无法从-Github-项目中克隆或推送项目&#34;&gt;&lt;a href=&#34;#2、无法从-Github-项目中克隆或推送项目&#34; class=&#34;headerlink&#34; title=&#34;2、无法从 Github 项目中克隆或推送项目&#34;&gt;&lt;/a&gt;2、无法从 Github 项目中克隆或推送项目&lt;/h1&gt;&lt;p&gt;此类问题非常常见，当你在终端下执行 &lt;code&gt;git clone &amp;lt;URL&amp;gt;&lt;/code&gt; 或者 &lt;code&gt;git push -u origin main&lt;/code&gt; 时，可能会出现不同程度的报错：&lt;/p&gt;
&lt;h2 id=&#34;2-1-443-端口无法连接&#34;&gt;&lt;a href=&#34;#2-1-443-端口无法连接&#34; class=&#34;headerlink&#34; title=&#34;2.1 443 端口无法连接&#34;&gt;&lt;/a&gt;2.1 443 端口无法连接&lt;/h2&gt;&lt;div class=&#34;code-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fatal: unable to access &amp;#x27;https://github.com/XXX/XXX.git/&amp;#x27;: Failed to connect to github.com port 443 after 21066 ms: Could not connect to server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;此类问题下最好是通过&lt;strong&gt;使用代理&lt;/strong&gt;，在使用此方法前，首先请确保你已安装如上提到的软件，如：Clash、V2rayNG 等。&lt;/p&gt;
&lt;p&gt;不同的软件，对应使用的端口也不相同，具体如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、Clash 小猫咪&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过其默认端口 &lt;code&gt;7890&lt;/code&gt; 以直接配置如下：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global http.proxy 127.0.0.1:7890&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global https.proxy 127.0.0.1:7890&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2、V2rayNG&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关于此软件，需要打开软件主界面，在如下图所指示的地址就是配置代理的选项，&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0901/3.jpg&#34; alt=&#34;新版 UI&#34;&gt;&lt;/p&gt;

  &lt;div class=&#34;note p-4 mb-4 rounded-small yellow icon-padding&#34;&gt;
    &lt;i class=&#34;note-icon fa-solid fa-circle-exclamation&#34;&gt;&lt;/i&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;V2rayN 的 UI 版本不同，如果使用的是旧版本的 V2rayN，则为如下图所指示：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0901/2.jpg&#34; alt=&#34;旧版 UI&#34;&gt;&lt;/p&gt;

  &lt;/div&gt;

&lt;p&gt;这里就按照 Http 所提供的端口 &lt;code&gt;10809&lt;/code&gt; 进行配置即可：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global http.proxy 127.0.0.1:10809&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global https.proxy 127.0.0.1:10809&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;h2 id=&#34;2-2-Git-中的-Github-邮箱与密码&#34;&gt;&lt;a href=&#34;#2-2-Git-中的-Github-邮箱与密码&#34; class=&#34;headerlink&#34; title=&#34;2.2 Git 中的 Github 邮箱与密码&#34;&gt;&lt;/a&gt;2.2 Git 中的 Github 邮箱与密码&lt;/h2&gt;&lt;p&gt;假如你需要在 Github 中克隆一个私有的项目仓库或推送项目仓库时，往往会出现如下情况：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Plaintext&#34;&gt;&lt;figure class=&#34;iseeu highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Username for &amp;#x27;https://github.com&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password for &amp;#x27;https://username@github.com&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;此类情况下，你需要输入&lt;strong&gt;对应的用户名和对应的 Token&lt;/strong&gt; 才能继续操作。关于 Token 的获取，请看下文。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先点击此链接 &lt;a class=&#34;link&#34;   href=&#34;https://github.com/settings/tokens/new&#34; &gt;New Personal Access Token (Classic) (github.com)&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;根据如下图所示操作：&lt;br&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0424/1.jpg&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;完成后点击最下方的绿色按钮【Generate token】，这将会生成一个随机的 token，如下图：&lt;br&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0424/2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图中的绿色框为所需要的 Token​。&lt;/p&gt;

  &lt;div class=&#34;note p-4 mb-4 rounded-small danger icon-padding&#34;&gt;
    &lt;i class=&#34;note-icon fa-solid fa-solid fa-circle-info&#34;&gt;&lt;/i&gt;&lt;p&gt;&lt;strong&gt;需要注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	每次仅会显示一次完整的 Token，下一次刷新页面后将会完全隐藏，建议生成后做好备份！&lt;/p&gt;

  &lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;后记&#34;&gt;&lt;a href=&#34;#后记&#34; class=&#34;headerlink&#34; title=&#34;后记&#34;&gt;&lt;/a&gt;后记&lt;/h1&gt;&lt;p&gt;本篇内容仅是本人在 Github 上的常见问题，如果遇到其它问题或者有更好的解决方案，欢迎在评论区下留言！&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://catisnotfound.github.io/2024/05/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E7%94%A8%E6%89%8B%E6%9C%BA%E6%9B%B4%E6%96%B0Hexo%E5%8D%9A%E5%AE%A2/</guid>
            <title>搭建个人博客（三）：用 Android 手机更新 Hexo 博客</title>
            <link>https://catisnotfound.github.io/2024/05/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E7%94%A8%E6%89%8B%E6%9C%BA%E6%9B%B4%E6%96%B0Hexo%E5%8D%9A%E5%AE%A2/</link>
            <category>软件安利</category>
            <category>博客搭建</category>
            <category>Git</category>
            <category>Github</category>
            <category>Hexo</category>
            <category>Android</category>
            <pubDate>Mon, 27 May 2024 10:18:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;现如今，Hexo 博客已经成为一个非常流行的博客框架，但是 Hexo 博客的更新通常需要通过命令行操作，对于不擅长命令行操作的小白来说，更新博客就显得十分麻烦。本文将介绍仅适用于 Android 的软件，帮助你在手机上轻松地更新 Hexo 博客。&lt;/p&gt;
&lt;h1 id=&#34;备份博客存档&#34;&gt;&lt;a href=&#34;#备份博客存档&#34; class=&#34;headerlink&#34; title=&#34;备份博客存档&#34;&gt;&lt;/a&gt;备份博客存档&lt;/h1&gt;&lt;p&gt;首先，在利用手机之前，首先就是在自己的电脑上&lt;strong&gt;备份自己的博客&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;（PS: 如果不是在电脑上写 Hexo 博客，请当博主没说~ o(*￣▽￣*)o）&lt;/p&gt;
&lt;p&gt;在此，请直接在 Github 上&lt;a href=&#34;https://github.com/new&#34;&gt;&lt;strong&gt;新建一个公共仓库（Public Repository）&lt;/strong&gt;&lt;/a&gt;，将自己的博客上传到 Github 中。&lt;/p&gt;
&lt;p&gt;假设：你已在 Github 上新建了一个名为 &lt;code&gt;blogBackup&lt;/code&gt; 的公共仓库，那么你应当在命令行下，执行如下命令：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;20210412&amp;quot;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 此处建议填写上传时间，如：20210412&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin https://github.com/yourname/blogBackup.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意：请将第4行中的 Git 仓库地址替换自己实际的 Github 仓库地址。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当你完成以上这些命令后，请回到你新建好的 Github 公共仓库以确认上传成功。&lt;/p&gt;
&lt;h1 id=&#34;WeBlog&#34;&gt;&lt;a href=&#34;#WeBlog&#34; class=&#34;headerlink&#34; title=&#34;WeBlog&#34;&gt;&lt;/a&gt;WeBlog&lt;/h1&gt;
  &lt;div class=&#34;note-large blue&#34;&gt;
    &lt;div class=&#34;notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center&#34;&gt;
      &lt;i class=&#34;notel-icon fa-solid fa-solid fa-book&#34;&gt;&lt;/i&gt;&lt;p&gt;软件简介&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class=&#34;notel-content&#34;&gt;
      &lt;p&gt;WeBlog 是一个运行在安卓的静态博客编写器，他提供从编写，构建到预览预览博客的能力，同时包含GIT，终端，自定义 Shell 脚本等功能。 新建文章，标签管理，现代化的UI，可以提供更好博客编写的体验。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0527/banner.jpg&#34;&gt;&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;

&lt;h2 id=&#34;下载安装&#34;&gt;&lt;a href=&#34;#下载安装&#34; class=&#34;headerlink&#34; title=&#34;下载安装&#34;&gt;&lt;/a&gt;下载安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;注意：WeBlog 目前仅支持 Android 系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;请直接点击下面链接，选择 Arm64 架构的安装包下载并安装。&lt;/p&gt;
&lt;a class=&#34;button  center large&#34; href=&#39;https://github.com/PangBaiWork/WeBlog/releases&#39; title=&#39;点击这里下载软件&#39;&gt;&lt;i class=&#39;fa-brands fa-github&#39;&gt;&lt;/i&gt; 点击这里下载软件&lt;/a&gt;

&lt;h2 id=&#34;导入博客&#34;&gt;&lt;a href=&#34;#导入博客&#34; class=&#34;headerlink&#34; title=&#34;导入博客&#34;&gt;&lt;/a&gt;导入博客&lt;/h2&gt;&lt;p&gt;打开 WeBlog 后，&lt;strong&gt;请务必安装 Hexo 框架及外部存储权限申请&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在主页上点击 &lt;code&gt;拉取项目&lt;/code&gt;，输入你的 Github 上的仓库地址。&lt;/p&gt;

  &lt;div class=&#34;note-large red&#34;&gt;
    &lt;div class=&#34;notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center&#34;&gt;
      &lt;i class=&#34;notel-icon fa-solid fa-solid fa-circle-info&#34;&gt;&lt;/i&gt;&lt;p&gt;注意&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class=&#34;notel-content&#34;&gt;
      &lt;p&gt;这里并非填你的 Github Pages 仓库地址，而是填写你的&lt;strong&gt;备份博客的仓库地址&lt;/strong&gt; （类似于：&lt;code&gt;https://github.com/yourname/blogBackup.git&lt;/code&gt;，否则无法识别到 Hexo 博客项目。&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;

&lt;p&gt;接着，在选择文件夹时，&lt;strong&gt;请一定要新建一个空的文件夹&lt;/strong&gt;，否则无法拉取 Github 仓库项目。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0527/1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后，请耐心等待加载，一般需要几分钟才能完成克隆。&lt;/p&gt;
&lt;h2 id=&#34;写博客&#34;&gt;&lt;a href=&#34;#写博客&#34; class=&#34;headerlink&#34; title=&#34;写博客&#34;&gt;&lt;/a&gt;写博客&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1. 定位你的博客文章目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在写博客之前，若需要找到你之前所写的文章，请直接打开你的项目源目录，依次点击 &lt;code&gt;source&lt;/code&gt; → &lt;code&gt;_posts&lt;/code&gt; 文件夹，在此目录下，你将看到你之前所写的所有博客文章。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 新建博客文章&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击右下角的 &lt;code&gt;+&lt;/code&gt; 号，按照提示填写文章基本信息即可完成创建。&lt;/p&gt;
&lt;p&gt;或者直接在终端下执行如下命令：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;文章标题&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0527/2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 尽情写作吧！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;好用的脚本文件&#34;&gt;&lt;a href=&#34;#好用的脚本文件&#34; class=&#34;headerlink&#34; title=&#34;好用的脚本文件&#34;&gt;&lt;/a&gt;好用的脚本文件&lt;/h2&gt;&lt;p&gt;为了方便编辑或更新博客，请根据自己的需求，在项目源目录的 &lt;code&gt;.scripts&lt;/code&gt; 文件夹下添加 Shell 脚本，以便减少不必要的操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;update-to-github-pages.sh&lt;/code&gt;：用于将本地博客更新到 Github Pages 仓库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：这将会一次性将博客的所有文件上传到 Github Pages 仓库，并覆盖掉原有的文件。&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;backup-your-blog.sh&lt;/code&gt;：用于将博客存档上传到 Github 仓库中。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这将会自动生成当前日期作为备份的备注。如：20210412&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;subst&#34;&gt;$(date +%Y%m%d)&lt;/span&gt;&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup-your-git.sh&lt;/code&gt;：用于配置 Git 全局参数。&lt;strong&gt;（建议导入博客后，执行一次）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &lt;span class=&#34;string&#34;&gt;&amp;quot;yourname&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &lt;span class=&#34;string&#34;&gt;&amp;quot;youremail@gmail.com&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global --add safe.directory &lt;span class=&#34;variable&#34;&gt;$PWD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;这里需要修改 &lt;code&gt;yourname&lt;/code&gt; 和 &lt;code&gt;youremail@gmail.com&lt;/code&gt; 为你的实际用户名和邮箱。&lt;/p&gt;
&lt;p&gt;当你不确定是否配置成功时，可以尝试在终端下单独执行如下命令查看参数是否生效。&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global safe.directory&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h1 id=&#34;常见问题&#34;&gt;&lt;a href=&#34;#常见问题&#34; class=&#34;headerlink&#34; title=&#34;常见问题&#34;&gt;&lt;/a&gt;常见问题&lt;/h1&gt;&lt;div class=&#34;tabs&#34; id=&#34;tab-question_answer&#34;&gt;&lt;ul class=&#34;nav-tabs&#34;&gt;&lt;li class=&#34;tab active&#34;&gt;&lt;a class=&#34;#question_answer-1&#34;&gt;💡 常见问题一&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;tab&#34;&gt;&lt;a class=&#34;#question_answer-2&#34;&gt;💡 常见问题二&lt;/a&gt;&lt;/li&gt;&lt;li class=&#34;tab&#34;&gt;&lt;a class=&#34;#question_answer-3&#34;&gt;💡 常见问题三&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&#34;tab-content&#34;&gt;&lt;div class=&#34;tab-pane active&#34; id=&#34;question_answer-1&#34;&gt;&lt;p&gt;Q：为什么拉取项目后，打开自建的文件夹仍是空的？&lt;/p&gt;
&lt;p&gt;A：请检查你的远程 Github 仓库是否为私人仓库，若为私人仓库（Private），请将该仓库转换为公共仓库（Public）。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0513/6.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0513/7.jpg&#34;&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;tab-pane&#34; id=&#34;question_answer-2&#34;&gt;&lt;p&gt;Q：当我拉取完项目后，为什么提示找不到 Hexo 框架？&lt;/p&gt;
&lt;p&gt;即使用【实时预览】时，直接出现 &lt;code&gt;The LivePreview is ended.&lt;/code&gt; 提示。&lt;/p&gt;
&lt;p&gt;A：在解决此问题前，请先查看你的项目源目录下是否有 &lt;code&gt;node_modules&lt;/code&gt; 目录。一般情况下，当你备份博客存档时，&lt;code&gt;node_modules&lt;/code&gt; 目录往往不会被上传到 Github 仓库。&lt;/p&gt;
&lt;p&gt;请直接从底部界面向上滑动，打开终端，并执行 &lt;code&gt;npm install&lt;/code&gt; 命令，等待安装依赖即可。&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;tab-pane&#34; id=&#34;question_answer-3&#34;&gt;&lt;p&gt;Q：执行 &lt;code&gt;npm install&lt;/code&gt; 命令时报错？&lt;/p&gt;
&lt;p&gt;A：在确认此问题前，请按照如下方式排查：&lt;/p&gt;
&lt;p&gt;方法一：检查你的项目源目录是否有 &lt;code&gt;package.json&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;若你的项目源目录下没有 &lt;code&gt;package.json&lt;/code&gt; 文件，则需要执行 &lt;code&gt;npm init&lt;/code&gt; 命令，并按照提示输入相关信息。&lt;/p&gt;
&lt;p&gt;方法二：将 &lt;code&gt;node_modules&lt;/code&gt; 目录复制到你的项目目录中。&lt;/p&gt;
&lt;p&gt;为了方便操作，这里作者建议：直接在你的项目源目录下新建一个 &lt;code&gt;install.sh&lt;/code&gt; 文件并编辑，&lt;/p&gt;
&lt;p&gt;这里假设你的 Github 仓库名为 &lt;code&gt;blogBackup&lt;/code&gt;，&lt;strong&gt;注意替换自己的 Github 仓库地址。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Bash&#34;&gt;&lt;figure class=&#34;iseeu highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# install.sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一次性执行脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 可直接克隆博客存档到本地项目中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 用于解决无法安装 Hexo 依赖问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;BLOG_DIR=&lt;span class=&#34;variable&#34;&gt;$PWD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ ! -d ~/blogBackup ];&lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;→ 正在克隆……&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/yourname/blogBackup.git &lt;span class=&#34;comment&#34;&gt;# 此处需替换为你的 Github 仓库地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; blogBackup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;→ 正在合并……&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; blogBackup&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    git pull&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ $? -ne 0 ];&lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;❌ 无法拉取仓库！&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [  ! -d node_modules ];&lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;→ 正在安装依赖....&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; [ $? -ne 0 ];&lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;❌ 下载/安装依赖失败！&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt; 255&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; -r node_modules &lt;span class=&#34;variable&#34;&gt;$BLOG_DIR&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 注意：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 其中的第10行的git仓库地址替换为实际的仓库地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 若需要调试于终端之上，请执行：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# bash ./.scripts/install.sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/0527/3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;完成脚本执行后，执行 &lt;code&gt;npm list&lt;/code&gt; 查看是否包含 &lt;code&gt;hexo&lt;/code&gt; 依赖即可。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;以上是本篇文章的全部内容，若在使用过程中遇到问题，请在评论区留言。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://catisnotfound.github.io/2024/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A8-Github-Page-%E4%B8%8A%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
            <title>搭建个人博客（一）：如何在 Github Page 上搭建我的个人博客</title>
            <link>https://catisnotfound.github.io/2024/04/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A8-Github-Page-%E4%B8%8A%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
            <category>博客搭建</category>
            <category>Git</category>
            <category>Github</category>
            <category>Hexo</category>
            <pubDate>Tue, 23 Apr 2024 19:08:53 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;概述&#34;&gt;&lt;a href=&#34;#概述&#34; class=&#34;headerlink&#34; title=&#34;概述&#34;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;如上标题，现在可以拥有属于自己的个人博客了 ~（＾▽＾）~ ，&lt;/p&gt;
&lt;p&gt;关于个人博客，可以利用 Github Page 来搭建自己的个人博客。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/5.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;怎么做？&#34;&gt;&lt;a href=&#34;#怎么做？&#34; class=&#34;headerlink&#34; title=&#34;怎么做？&#34;&gt;&lt;/a&gt;怎么做？&lt;/h2&gt;&lt;h3 id=&#34;1-注册-Github&#34;&gt;&lt;a href=&#34;#1-注册-Github&#34; class=&#34;headerlink&#34; title=&#34;1. 注册 Github&#34;&gt;&lt;/a&gt;1. 注册 Github&lt;/h3&gt;&lt;p&gt;既然提到了 Github Page ，首先就得&lt;a class=&#34;link&#34;   href=&#34;https://github.com/signup&#34; &gt;注册自己的 Github 账号&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果 Github 界面打不开，建议使用 &lt;a class=&#34;link&#34;   href=&#34;https://steampp.net/&#34; &gt;Watt Toolkit&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;😃，（不仅可以加速 Steam、橙子、育碧，同时也能加速 Github）&lt;/p&gt;
&lt;p&gt;注册一个 Github 账号只需要邮箱，并且进行邮箱验证就能快速完成！ヾ(•ω•&amp;#96;)o&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-创建自己的仓库&#34;&gt;&lt;a href=&#34;#2-创建自己的仓库&#34; class=&#34;headerlink&#34; title=&#34;2. 创建自己的仓库&#34;&gt;&lt;/a&gt;2. 创建自己的仓库&lt;/h3&gt;&lt;p&gt;注册之后，接下来就要创建自己的仓库，&lt;br&gt;首先点击【New】，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/1.jpg&#34; alt=&#34;1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;其次，创建仓库时，&lt;strong&gt;仓库名一定要以&lt;code&gt;[你的用户名].github.io&lt;/code&gt; 为名，&lt;/strong&gt; 默认下都会将其设为 Github Page，之后就能完成创建。具体看下图：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/2.jpg&#34; alt=&#34;2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;创建完成之后，点击进入你的仓库项目，依次点击【Settings】→ 【Pages】→【Deploy from a branch】，并选择【Github Action】（作此步是方便为了后期可以更换框架来改善自己的博客网页）&lt;br&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/2.1.jpg&#34; alt=&#34;2.1.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-选择框架&#34;&gt;&lt;a href=&#34;#3-选择框架&#34; class=&#34;headerlink&#34; title=&#34;3. 选择框架&#34;&gt;&lt;/a&gt;3. 选择框架&lt;/h3&gt;&lt;p&gt;当你做完上述步骤后，你可以直接访问自己的网页，如下图：&lt;br&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/3.0.jpg&#34; alt=&#34;3.0.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来就是选择网页框架。这里就以 Hexo 为例，这里就只需要用到 &lt;code&gt;git&lt;/code&gt; 和 &lt;code&gt;node.js&lt;/code&gt; 两个依赖软件了，关于详细地安装步骤，请直接参照&lt;a class=&#34;link&#34;   href=&#34;https://hexo.io/zh-cn/docs/&#34; &gt;官方文档&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;即可&lt;/p&gt;
&lt;p&gt;完成后的搭建，大概是长这样的：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/3.jpg&#34; alt=&#34;3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，这还不够，你还可以给它更换一个更好看的主题，这里作者就用了 Redefine 主题，大概就是长这样的(*^_^*)：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/4.jpg&#34; alt=&#34;4.jpg&#34;&gt;&lt;/p&gt;

  &lt;div class=&#34;note-large blue&#34;&gt;
    &lt;div class=&#34;notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center&#34;&gt;
      &lt;i class=&#34;notel-icon fa-solid fa-solid fa-lightbulb&#34;&gt;&lt;/i&gt;&lt;p&gt;跳转提示&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class=&#34;notel-content&#34;&gt;
      &lt;p&gt;关于怎么配置这个主题，&lt;/p&gt;
&lt;p&gt;请跳转到：&lt;a href=&#34;../../24/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE-Hexo-%E4%BD%BF%E7%94%A8-Rendefine-%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2&#34;&gt;【搭建个人博客（二）：如何详细配置 Hexo 使用 Rendefine 主题美化博客】&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
  &lt;/div&gt;

&lt;p&gt;最后简单的做个配置，最终呈现了这样的效果：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;/images/2024/042301/5.jpg&#34; alt=&#34;5.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-上传到-Github&#34;&gt;&lt;a href=&#34;#4-上传到-Github&#34; class=&#34;headerlink&#34; title=&#34;4. 上传到 Github&#34;&gt;&lt;/a&gt;4. 上传到 Github&lt;/h3&gt;&lt;p&gt;接下来，将本地上制作好的内容上传到 Github 仓库中。关于怎么上传部署 Github Pages，&lt;a class=&#34;link&#34;   href=&#34;https://hexo.io/zh-cn/docs/github-pages&#34; &gt;请点击查看关于 Hexo 上传部署到 Github Pages 的教程&lt;i class=&#34;fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首次执行，需要下列的所有命令：&lt;/p&gt;
&lt;div class=&#34;code-container&#34; data-rel=&#34;Shell&#34;&gt;&lt;figure class=&#34;iseeu highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone [你的Github仓库地址]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cp -r [你的博客名称]/* [Github仓库名称] # 注意两个路径之间留下至少一个空格&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd [Github仓库名称]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &amp;quot;[你的Github昵称]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &amp;quot;[你注册 Github 时所用的邮箱]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin [你的Github仓库地址]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &amp;quot;这里随便写点什么&amp;quot; # 此行指令可不写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;

&lt;p&gt;等待上传完成即可(*^_^*)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;写在后面&#34;&gt;&lt;a href=&#34;#写在后面&#34; class=&#34;headerlink&#34; title=&#34;写在后面&#34;&gt;&lt;/a&gt;写在后面&lt;/h2&gt;&lt;p&gt;下一篇将继续详细【&lt;a href=&#34;../../24/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE-Hexo-%E4%BD%BF%E7%94%A8-Rendefine-%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%8D%9A%E5%AE%A2&#34;&gt;配置 Hexo，以及如何使用 Redefine 主题美化博客&lt;/a&gt;】&lt;/p&gt;
&lt;p&gt;本篇文章中部分没有提到的内容，下一篇也将会详细介绍(*^_^*)&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
