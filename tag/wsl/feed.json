{
    "version": "https://jsonfeed.org/version/1",
    "title": "CatIsNotFound • All posts by \"wsl\" tag",
    "description": "一个基于 Hexo 框架的个人博客网站",
    "home_page_url": "https://CatIsNotFound.github.io",
    "items": [
        {
            "id": "https://catisnotfound.github.io/2024/11/%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0-Oh-my-zsh-%E5%93%A6-%E6%88%91%E9%82%A3%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF/",
            "url": "https://catisnotfound.github.io/2024/11/%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0-Oh-my-zsh-%E5%93%A6-%E6%88%91%E9%82%A3%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF/",
            "title": "[折腾日记] Oh-my-zsh 哦~我那好用的终端",
            "date_published": "2024-11-27T03:58:30.000Z",
            "content_html": "<h1 id=\"写在最前\"><a href=\"#写在最前\" class=\"headerlink\" title=\"写在最前\"></a>写在最前</h1><p>写这篇文章的初衷主要是为了记录曾经在 Linux 上折腾过的各种过程，并将其写成类似于学习教程的形式以此来帮助跟作者本人一样在折腾 Linux 的人。</p>\n<p>如果你也正在折腾 Linux，那么请简要阅读这篇文章，希望这能有所帮助。 (￣︶￣*)</p>\n<h1 id=\"折腾环境\"><a href=\"#折腾环境\" class=\"headerlink\" title=\"折腾环境\"></a>折腾环境</h1><p>这里本人使用的是基于 WSL 2 下的 Debian 发行版系统，</p>\n<p>如果你已安装 WSL，可直接执行如下：</p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe <span class=\"literal\">--install</span> <span class=\"literal\">-d</span> debian</span><br></pre></td></tr></table></figure></div>\n\n<p>当然，如果需要其它可安装的发行版系统，可直接执行：</p>\n<div class=\"code-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe -l -o</span><br></pre></td></tr></table></figure></div>\n\n<p>如果未安装 WSL？不如看看这篇？</p>\n<a class=\"button  center large\" href='/2024/06/WSL：一个适用于-Windows-的-Linux-子系统/' title='WSL：一个适用于 Windows 的 Linux 子系统'><i class='fas fa-link'></i> WSL：一个适用于 Windows 的 Linux 子系统</a>\n\n<h1 id=\"折腾全过程\"><a href=\"#折腾全过程\" class=\"headerlink\" title=\"折腾全过程\"></a>折腾全过程</h1><p>很显然，默认环境下的 WSL 除了勉强能用的 <kbd>Tab</kbd> 命令&#x2F;目录补全、<kbd>Ctrl</kbd> + <kbd>R</kbd> 历史记录回溯之外，貌似啥也没有了(ˉ▽ˉ；)…</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">debian@DESKTOP-EPQI5KJ:~$ _</span><br></pre></td></tr></table></figure></div>\n\n<p>是的，就是这样。一个平平无奇的交互界面。</p>\n<p>但为了能更好地改造交互，不仅要改变外观，还要增加其可用程度。以下是本人折腾时的简要过程。</p>\n<h2 id=\"1-安装必需软件包\"><a href=\"#1-安装必需软件包\" class=\"headerlink\" title=\"1. 安装必需软件包\"></a>1. 安装必需软件包</h2><p>很显然，要想改变这一切，需要先改变当前的 Shell 环境。欲查看当前的环境，只需执行：<code>echo $SHELL</code>。这里作者默认使用 Bash 环境，其输出为：<code>/bin/bash</code>。</p>\n<p>不过在此之前，首先就是需要使用 APT 包管理器来安装所需要的软件包。</p>\n<blockquote>\n<p>注：这里的 APT 不是想象的那个 APT，而是那个具有超级牛力的 APT [doge]。</p>\n</blockquote>\n<p>执行命令如下：</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install git zsh curl vim neofetch -y <span class=\"comment\"># 这里的 neofetch 可不装，这里纯粹是为了装 X 用的</span></span><br></pre></td></tr></table></figure></div>\n\n<blockquote>\n<p><strong>💡 关于下载速度慢的解决方法：</strong></p>\n<p>使用 APT 时出现下载慢？很可能是因为💿<strong>镜像源</strong>，要想改善其下载速度，<strong>直接修改镜像源即可</strong>。</p>\n<p>这里作者使用清华源镜像以加速，当然还可以用其它的开源镜像站。</p>\n<p>你只需要执行如下命令，即可一次性完成替换镜像源：</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/apt/sources.list &lt;&lt; <span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\"># deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure></div>\n\n<p>步骤 2：更新软件源</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br></pre></td></tr></table></figure></div>\n\n<p>步骤 3：下载到一半时取消？直接带上 <code>--fix-missing</code> 选项就可以继续未完成的下载了O(∩_∩)O。</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install git zsh curl vim neofetch -y --fix-missing</span><br></pre></td></tr></table></figure></div>\n</blockquote>\n<h2 id=\"2-切换-Shell-环境\"><a href=\"#2-切换-Shell-环境\" class=\"headerlink\" title=\"2. 切换 Shell 环境\"></a>2. 切换 Shell 环境</h2><p>当你完成了下载以及安装之后，执行如下命令，可直接将 Bash 更改为 Zsh 环境</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></div>\n\n<p>执行后，只需重新登录此用户，你会看到如下提示界面：</p>\n<div class=\"code-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This is the Z Shell configuration function for new users,</span><br><span class=\"line\">zsh-newuser-install.</span><br><span class=\"line\">You are seeing this message because you have no zsh startup files</span><br><span class=\"line\">(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory</span><br><span class=\"line\">~).  This function can help you with a few settings that should</span><br><span class=\"line\">make your use of the shell easier.</span><br><span class=\"line\"></span><br><span class=\"line\">You can:</span><br><span class=\"line\"></span><br><span class=\"line\">(q)  Quit and do nothing.  The function will be run again next time.</span><br><span class=\"line\"></span><br><span class=\"line\">(0)  Exit, creating the file ~/.zshrc containing just a comment.</span><br><span class=\"line\">     That will prevent this function being run again.</span><br><span class=\"line\"></span><br><span class=\"line\">(1)  Continue to the main menu.</span><br><span class=\"line\"></span><br><span class=\"line\">(2)  Populate your ~/.zshrc with the configuration recommended</span><br><span class=\"line\">     by the system administrator and exit (you will need to edit</span><br><span class=\"line\">     the file by hand, if so desired).</span><br><span class=\"line\"></span><br><span class=\"line\">--- Type one of the keys in parentheses ---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></div>\n\n<p>没错，到这里已经是完成了一部分！此步骤下，可以直接按下 <code>0</code>，不做任何配置即可。之后，你会看到全新的命令行显示。如下：</p>\n<div class=\"code-container\" data-rel=\"Shell\"><figure class=\"iseeu highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">DESKTOP-EPQI5KJ% </span><span class=\"language-bash\">_</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"3-安装与配置-Oh-my-zsh\"><a href=\"#3-安装与配置-Oh-my-zsh\" class=\"headerlink\" title=\"3. 安装与配置 Oh-my-zsh\"></a>3. 安装与配置 Oh-my-zsh</h2><p>虽然，已经成功了一部分，但还是缺少了灵魂。为了能让自己的 zsh 变得更极具美观，安装 oh-my-zsh 或许是一个非常不错的一种方式。</p>\n<h3 id=\"安装-Oh-my-zsh\"><a href=\"#安装-Oh-my-zsh\" class=\"headerlink\" title=\"安装 Oh-my-zsh\"></a>安装 Oh-my-zsh</h3><p>这里为了方便国内用户下载 Oh-my-zsh，这里就直接<strong>采用清华源下载的方法</strong>来执行如下操作：</p>\n<blockquote>\n<p>详情说明见：<a class=\"link\"   href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ohmyzsh.git/\" >ohmyzsh.git | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></p>\n</blockquote>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://mirrors.tuna.tsinghua.edu.cn/git/ohmyzsh.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ohmyzsh/tools</span><br><span class=\"line\">REMOTE=https://mirrors.tuna.tsinghua.edu.cn/git/ohmyzsh.git sh install.sh</span><br></pre></td></tr></table></figure></div>\n\n<p>等待一系列操作后，你将会看到安装成功的画面：</p>\n<div class=\"code-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Looking for an existing zsh config...</span><br><span class=\"line\">Found /home/test/.zshrc. Backing up to /home/test/.zshrc.pre-oh-my-zsh</span><br><span class=\"line\">Using the Oh My Zsh template file and adding it to /home/test/.zshrc.</span><br><span class=\"line\"></span><br><span class=\"line\">         __                                     __</span><br><span class=\"line\">  ____  / /_     ____ ___  __  __   ____  _____/ /_</span><br><span class=\"line\"> / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\</span><br><span class=\"line\">/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /</span><br><span class=\"line\">\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/</span><br><span class=\"line\">                        /____/                       ....is now installed!</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Before you scream Oh My Zsh! look over the `.zshrc` file to select plugins, themes, and options.</span><br><span class=\"line\"></span><br><span class=\"line\">• Follow us on X: https://x.com/ohmyzsh</span><br><span class=\"line\">• Join our Discord community: https://discord.gg/ohmyzsh</span><br><span class=\"line\">• Get stickers, t-shirts, coffee mugs and more: https://shop.planetargon.com/collections/oh-my-zsh</span><br><span class=\"line\"></span><br><span class=\"line\">➜  tools _</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"配置我的-zsh\"><a href=\"#配置我的-zsh\" class=\"headerlink\" title=\"配置我的 zsh\"></a>配置我的 zsh</h3><p>是的，当你看到如上的画面时，Oh-my-zsh 的安装就已经完成了！不过，这要怎么配置我的 zsh 呢？</p>\n<p>直接利用 vim 打开 <code>~/.zshrc</code> 文件，在这里你可以添加插件以及修改正在使用的主题。</p>\n<p><strong>提示：以下所提到的主题、插件等配置都需要在  <code>~/.zshrc</code> 配置文件中修改。</strong></p>\n<h4 id=\"1-改变主题\"><a href=\"#1-改变主题\" class=\"headerlink\" title=\"(1) 改变主题\"></a>(1) 改变主题</h4><p>在 <code>ZSH_THEME</code> 变量中修改对应主题</p>\n<div class=\"code-container\" data-rel=\"Sh\"><figure class=\"iseeu highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;robbyrussell&quot;</span> <span class=\"comment\"># 默认主题</span></span><br><span class=\"line\">ZSH_THEME=<span class=\"string\">&quot;random&quot;</span> \t\t <span class=\"comment\"># 不确定或有多个常用外观的情况下，random 是个不错的选项</span></span><br></pre></td></tr></table></figure></div>\n\n<p>关于所有可用的主题，执行：<code>ls -1 $ZSH/themes | cut -d &#39;.&#39; -f1 | less</code> 可直接查看。</p>\n<blockquote>\n<p>关于主题预览，可直接访问：<a class=\"link\"   href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\" >https://github.com/ohmyzsh/ohmyzsh/wiki/Themes<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></p>\n</blockquote>\n<p>当你遇到不太确定的主题或者遇到喜欢多个主题时，在 <code>ZSH_THEME</code> 变量中设置为 <code>random</code> 是个很不错的主意(*￣3￣)╭（如果你真心找不到什么特别好看的主题）</p>\n<p>当你设置成随机主题时，再次重新登录时，你会看到类似这样的画面：</p>\n<div class=\"code-container\" data-rel=\"Sh\"><figure class=\"iseeu highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[oh-my-zsh] Random theme <span class=\"string\">&#x27;juanghurtado&#x27;</span> loaded</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">test</span>@DESKTOP-EPQI5KJ:/home/debian</span><br><span class=\"line\">&gt; _</span><br></pre></td></tr></table></figure></div>\n\n<p>除了上面的提示，你还可以直接通过 <code>echo $RANDOM_THEME</code> 来查看随机到的主题名称。</p>\n<p>如果你遇到了几个比较满意的主题，可以直接将其记录到 <code>ZSH_THEME_RANDOM_CANDIDATES</code> 变量中，这样以后每次登录都只会在此变量中随机选择主题。</p>\n<p>例如：作者就对 <code>juanghurtado</code>, <code>essembeh</code>, <code>tjkirch</code>, <code>apple</code> 等主题感兴趣，那么可以将这几个主题都填入到该变量中。内容如下：</p>\n<div class=\"code-container\" data-rel=\"Sh\"><figure class=\"iseeu highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZSH_THEME_RANDOM_CANDIDATES=( <span class=\"string\">&quot;juanghurtado&quot;</span> <span class=\"string\">&quot;essembeh&quot;</span> <span class=\"string\">&quot;tjkirch&quot;</span> <span class=\"string\">&quot;apple&quot;</span> ) <span class=\"comment\"># 注意空格分隔</span></span><br></pre></td></tr></table></figure></div>\n\n<p><strong>注意：此变量大约在文件的第 18 行左右，只需将最前面的 <code>#</code> 去掉即可。</strong></p>\n<h4 id=\"2-通用插件\"><a href=\"#2-通用插件\" class=\"headerlink\" title=\"(2) 通用插件\"></a>(2) 通用插件</h4><p>为了能够让终端变得更加好用，首先来推荐几个内置的 ZSH 插件。</p>\n<ul>\n<li><p><code>aliases</code>：基于 <code>alias</code> 命令，可快速搜索短命令（简写命令）；其命令为 <code>als</code>。<a class=\"link\"   href=\"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/aliases\" >点此查看所有用法<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a>。</p>\n<ul>\n<li><p>简要用法 1：<code>als -g git</code> 查看 <code>git</code> 组下的所有短命令；</p>\n</li>\n<li><p>👍 <strong>简要用法 2</strong>：<code>als &lt;keys&gt;</code> 搜索包含 <code>&lt;keys&gt;</code> 的命令以及短命令；</p>\n</li>\n<li><p>简要用法 3：<code>als --groups</code> 查看所有组；</p>\n</li>\n<li><p><strong>Tips：这对于经常使用 <code>git</code> 命令的人群而言非常有用！</strong></p>\n</li>\n</ul>\n</li>\n<li><p><code>git</code>：默认启用的插件，提供更多的<a class=\"link\"   href=\"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git#aliases\" >短命令<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a>以及更有用的<a class=\"link\"   href=\"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git#functions\" >函数<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a>；</p>\n<ul>\n<li>可直接搭配 <code>aliases</code> 查看所有关于 git 的短命令</li>\n</ul>\n</li>\n<li><p><code>sudo</code>：启用后，只需按下两次 <kbd>Esc</kbd> 就能在行前自动添加&#x2F;删除 <code>sudo</code> 前缀；</p>\n</li>\n<li><p><code>z</code>：显示 &#x2F; 快速进入最常访问的目录</p>\n<ul>\n<li>默认下，执行 <code>z</code> 命令，会显示前几个访问频率最高的目录；</li>\n<li>在命令行下依次键入 <code>z</code>  、<kbd>Space</kbd>  后，连续按下 <kbd>Tab</kbd> 键，可以进入经常访问过的目录。</li>\n</ul>\n</li>\n<li><p><code>zsh-navigation-tools</code>：命令历史记录回溯改良版，按下 <kbd>Ctrl</kbd> + <kbd>R</kbd> 键可快速搜索之前使用过的命令</p>\n</li>\n</ul>\n<blockquote>\n<p>TIPS：关于所有自带插件，请详见：<a class=\"link\"   href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins\" >Plugins · ohmyzsh&#x2F;ohmyzsh Wiki<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></p>\n</blockquote>\n<p><strong>这里就推荐几个 Github 上非常好用的几款 ZSH 插件，以提升使用效率。</strong></p>\n<ul>\n<li><code>zsh-autosuggestions</code>：自动建议工具，根据命令历史记录来自动完成命令；</li>\n<li><code>zsh-completions</code>：自动补全命令工具，可通过 <kbd>Tab</kbd> 键以快速补全各种常用命令。</li>\n<li><code>zsh-syntax-highlighting</code>：语法检查高亮工具，可检查当前输入的命令以标记不同的颜色；</li>\n</ul>\n<blockquote>\n<p>以上推荐的额外插件，均可通过 github 上下载。对应链接如下：</p>\n<ul>\n<li><a class=\"link\"   href=\"https://github.com/zsh-users/zsh-autosuggestions\" >https://github.com/zsh-users/zsh-autosuggestions<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n<li><a class=\"link\"   href=\"https://github.com/zsh-users/zsh-completions\" >https://github.com/zsh-users/zsh-completions<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n<li><a class=\"link\"   href=\"https://github.com/zsh-users/zsh-syntax-highlighting\" >https://github.com/zsh-users/zsh-syntax-highlighting<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>国内若不能直接访问 Github，那么，请尝试使用 gitee，对应链接如下：</p>\n<ul>\n<li><a class=\"link\"   href=\"https://gitee.com/sasukeZhou/zsh-autosuggestions\" >https://gitee.com/sasukeZhou/zsh-autosuggestions<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n<li><a class=\"link\"   href=\"https://gitee.com/yuhldr/zsh-completions\" >https://gitee.com/yuhldr/zsh-completions<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n<li><a class=\"link\"   href=\"https://gitee.com/minhanghuang/zsh-syntax-highlighting\" >https://gitee.com/minhanghuang/zsh-syntax-highlighting<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n</ul>\n</blockquote>\n<h4 id=\"3-添加插件\"><a href=\"#3-添加插件\" class=\"headerlink\" title=\"(3) 添加插件\"></a>(3) 添加插件</h4><p>欲添加插件，可以在 <code>~/.zshrc</code> 文件中的 <code>plugins</code> 变量来进行添加，具体如下例：</p>\n<div class=\"code-container\" data-rel=\"Sh\"><figure class=\"iseeu highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins=(</span><br><span class=\"line\">    aliases</span><br><span class=\"line\">    git</span><br><span class=\"line\">    <span class=\"built_in\">sudo</span></span><br><span class=\"line\">    z</span><br><span class=\"line\">    zsh-navigation-tools</span><br><span class=\"line\">    zsh-autosuggestions</span><br><span class=\"line\">    zsh-completions</span><br><span class=\"line\">    zsh-syntax-highlighting</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>对于第三方插件（自行下载的插件）</strong></p>\n<p>要想添加插件，有以下几种方法：</p>\n<p><strong>👍 Git 安装</strong></p>\n<p>以安装 <code>zsh-autosuggestions</code> 为例：</p>\n<p>可直接通过命令以实现安装：</p>\n<div class=\"code-container\" data-rel=\"Sh\"><figure class=\"iseeu highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-autosuggestions.git <span class=\"variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>手动安装</strong></p>\n<p>还是以安装 <code>zsh-autosuggestions</code> 为例，</p>\n<p>在浏览器中<a class=\"link\"   href=\"https://github.com/zsh-users/zsh-autosuggestions/releases/tag/v0.7.1\" >点击下载<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a>对应的压缩包 <code>(*.zip)</code>。</p>\n<p>解压压缩包，将解压后的文件复制到 <code>$ZSH_CUSTOM/plugins/</code> 目录下。具体命令如下：</p>\n<div class=\"code-container\" data-rel=\"Sh\"><figure class=\"iseeu highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip zsh-autosuggestions-0.7.1.zip</span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r zsh-autosuggestions-0.7.1 <span class=\"variable\">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>注意：这里的 <code>zsh-autosuggestions-0.7.1</code> 为解压后的文件夹名称，请根据实际情况进行修改；</strong></p>\n<p><strong>注意：若当前发行版系统找不到 <code>unzip</code> 命令，请自行通过 apt 安装 <code>unzip</code> 软件包。具体命令为：<code>sudo apt install unzip -y</code>。</strong></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>关于下一篇内容，个人考虑在 Neovim 上入手，如果有较强的折腾能力，可以尝试将 neovim 改造成一个命令行下的 IDE(*^_^*)。</p>\n<p>还是那句话：感兴趣？建议点个收藏或关注？(￣▽￣)”（多少有点不好意思）</p>\n",
            "tags": [
                "新手向",
                "Git",
                "Github",
                "Linux",
                "WSL",
                "oh-my-zsh"
            ]
        },
        {
            "id": "https://catisnotfound.github.io/2024/06/WSL%EF%BC%9A%E4%B8%80%E4%B8%AA%E9%80%82%E7%94%A8%E4%BA%8E-Windows-%E7%9A%84-Linux-%E5%AD%90%E7%B3%BB%E7%BB%9F/",
            "url": "https://catisnotfound.github.io/2024/06/WSL%EF%BC%9A%E4%B8%80%E4%B8%AA%E9%80%82%E7%94%A8%E4%BA%8E-Windows-%E7%9A%84-Linux-%E5%AD%90%E7%B3%BB%E7%BB%9F/",
            "title": "WSL：一个适用于 Windows 的 Linux 子系统",
            "date_published": "2024-06-06T09:03:20.000Z",
            "content_html": "\n  <div class=\"note-large regular\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-book\"></i><p>WSL 简介</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>适用于 Linux 的 Windows 子系统 (WSL) 是 Windows 的一项功能，可用于在 Windows 计算机上运行 Linux 环境，而无需单独的虚拟机或双引导。 WSL 旨在为希望同时使用 Windows 和 Linux 的开发人员提供无缝高效的体验。<br><img loading=\"lazy\" src=\"/images/2024/0606/R-C.jpg\"></p>\n\n    </div>\n  </div>\n\n<h1 id=\"WSL-适合谁？\"><a href=\"#WSL-适合谁？\" class=\"headerlink\" title=\"WSL 适合谁？\"></a>WSL 适合谁？</h1><ul>\n<li>Linux 新手、Linux 初学者</li>\n<li>需要大量命令行操作</li>\n<li>需要 Linux 开发、Linux 运维等……</li>\n</ul>\n<h1 id=\"WSL-的优势\"><a href=\"#WSL-的优势\" class=\"headerlink\" title=\"WSL 的优势\"></a>WSL 的优势</h1><p>在 Windows 系统下，WSL 是以容器的形式存在，你可以使用它能完成以下几件：</p>\n<ul>\n<li>安装&#x2F;运行各种发行版 Linux：不管你是 Debian 系、Arch 系、Redhat 系，你可以通过 Microsoft Store 上下载你需要的 Linux 发行版。</li>\n<li>管理多个 WSL：这就意味着，你可以不单单只安装一个 Linux 发行版，还可以安装多个。</li>\n<li>独立存储：你可以将文件独立存储于 Linux 文件系统中。</li>\n<li>在 Windows 上调用 Linux 应用程序：在最新的 WSL 2 中，你可以直接在开始菜单中独立运行已安装的 Linux 应用程序。</li>\n</ul>\n<h1 id=\"安装-WSL\"><a href=\"#安装-WSL\" class=\"headerlink\" title=\"安装 WSL\"></a>安装 WSL</h1>\n  <div class=\"note-large yellow\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-exclamation\"></i><p>注意</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>WSL 2 支持 Windows 11、Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）</p>\n<p>请在下载安装前，通过 <kbd><i class=\"fa-brands fa-windows\"></i></kbd> + <code>R</code> 打开【运行】窗口，并执行 <code>winver</code> 查看操作系统内部版本号。</p>\n<img loading=\"lazy\" src=\"/images/2024/0606/1.jpg\" alt=\"查看操作系统内部版本号\" style=\"width: 50%\">\n\n    </div>\n  </div>\n\n<p>你需要安装 Windows Subsystem for Linux (WSL) 和对应的 Linux 发行版。这里就以安装 WSL 和 Ubuntu 24.04 LTS 为例。首先，请直接点击下方按钮以直接安装如下软件。</p>\n<a class=\"button  regular\" href='https://apps.microsoft.com/detail/9p9tqf7mrm4r?hl=zh-cn&gl=CN' title='WSL 下载安装'><i class='fa-brands fa-microsoft'></i> WSL 下载安装</a>\n\n<a class=\"button  regular\" href='https://apps.microsoft.com/detail/9nz3klhxdjp5?hl=zh-cn&gl=CN' title='Ubuntu 24.04 LTS 下载安装'><i class='fa-brands fa-linux'></i> Ubuntu 24.04 LTS 下载安装</a>\n\n<p>当你完成如上安装之后，接下来，请直接按下 <kbd><i class=\"fa-brands fa-windows\"></i></kbd> + <code>X</code> 组合键，进入 Powershell，并输入以下命令，这将会安装 WSL 自选组件。</p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe <span class=\"literal\">--install</span> <span class=\"literal\">--no-distribution</span></span><br></pre></td></tr></table></figure></div>\n\n<p>安装完成后，请直接重启自己的电脑。</p>\n<p>之后，你就可以直接在开始菜单中找到并启动 Ubuntu 24.04 LTS ，等待几分钟的安装。</p>\n<p>安装完成之后，你将会在终端上看到类似如下的提示，请按照提示设置一个新的用户和新的密码即可完成。</p>\n<div class=\"code-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Please create a default UNIX user account. The username does not need to match your Windows username.</span><br><span class=\"line\">For more information visit: https://aka.ms/wslusers</span><br><span class=\"line\">Enter new UNIX username:   输入你的用户名</span><br><span class=\"line\">New password:              设置密码，此处输入的密码是隐藏的</span><br><span class=\"line\">Retype new password:       再次设置密码，同上</span><br><span class=\"line\">passwd: password updated successfully</span><br><span class=\"line\">Installation successful!</span><br></pre></td></tr></table></figure></div>\n\n\n  <div class=\"note-large yellow\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-exclamation\"></i><p>注意</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>当你完成如上安装操作后，如果你忘记了自己设置的密码，可以通过以下方法：</p>\n<p>打开 Powershell，并以 <code>root</code> 用户身份运行，命令如下：</p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">-u</span> root</span><br></pre></td></tr></table></figure></div>\n\n<blockquote>\n<p>若需要指定一个发行版，请直接执行：<code>wsl -d &lt;发行版名称&gt; -u root</code></p>\n</blockquote>\n<p>然后再在终端中输入以下命令，即可重置密码。</p>\n<div class=\"code-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd &lt;用户名&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>&lt;用户名&gt;</code> 即为你设置的用户名。</p>\n\n    </div>\n  </div>\n\n<h1 id=\"WSL-使用方法与技巧\"><a href=\"#WSL-使用方法与技巧\" class=\"headerlink\" title=\"WSL 使用方法与技巧\"></a>WSL 使用方法与技巧</h1><h2 id=\"命令行操作\"><a href=\"#命令行操作\" class=\"headerlink\" title=\"命令行操作\"></a>命令行操作</h2><p>WSL 支持在 Powershell 下进行管理。以下仅介绍几条较有用且常用的 WSL 命令：</p>\n<p><strong>（1）如何安装 Linux 发行版</strong></p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--install</span> <span class=\"literal\">-d</span> &lt;发行版名称&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>其中，<code>&lt;发行版名称&gt;</code> 即为你要安装的 Linux 发行版名称，例如，若要安装 Ubuntu 24.04 LTS，则执行如下命令：</p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--install</span> <span class=\"literal\">-d</span> Ubuntu<span class=\"literal\">-24</span>.<span class=\"number\">04</span></span><br></pre></td></tr></table></figure></div>\n\n<p><strong>（2）查看所有当前可用的 Linux 发行版</strong></p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--list</span> <span class=\"literal\">--online</span></span><br></pre></td></tr></table></figure></div>\n\n<p>或者，使用 <code>wsl -l -o</code> 代替。</p>\n<p><strong>（3）列出所有 Linux 发行版的运行状态</strong></p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--list</span> <span class=\"literal\">--verbose</span></span><br></pre></td></tr></table></figure></div>\n\n<p>或者，使用 <code>wsl -l -v</code> 代替。</p>\n<p><strong>（4）启动默认的 Linux 发行版</strong></p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl</span><br></pre></td></tr></table></figure></div>\n\n<p>若需要指定一个发行版，则执行如下命令：</p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">-d</span> &lt;发行版名称&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>（5）停止默认的 Linux 发行版</strong></p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--shutdown</span></span><br></pre></td></tr></table></figure></div>\n\n<p>若需要指定一个发行版，则执行如下命令：</p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--terminate</span> &lt;发行版名称&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>（6）设置默认的 Linux 发行版</strong></p>\n<div class=\"code-container\" data-rel=\"Powershell\"><figure class=\"iseeu highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl <span class=\"literal\">--set-default</span> &lt;发行版名称&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"图形化操作\"><a href=\"#图形化操作\" class=\"headerlink\" title=\"图形化操作\"></a>图形化操作</h2><p>如果你觉得以上命令行操作有些许繁琐，那么你可以安装一个图形化管理 WSL 的工具。本文将仅推荐在 Microsoft Store 上下载的两款管理 WSL 的工具。</p>\n<p><strong>WSL Tray Monitor - WSL 系统托盘监控工具</strong></p>\n<a class=\"button  center large\" href='https://apps.microsoft.com/detail/9p781rw2vm6g?hl=zh-cn&gl=CN' title='WSL Tray Monitor 下载安装'><i class='fa-brands fa-windows'></i> WSL Tray Monitor 下载安装</a>\n\n<p>你可以通过此软件来控制任一 WSL 发行版的启动、停止等操作。</p>\n<p>在通知区域图标下，你可以鼠标单击打开管理界面，鼠标双击打开会启动默认的 WSL 发行版并打开终端。</p>\n<img loading=\"lazy\" src=\"/images/2024/0606/3.jpg\" alt=\"WSL Tray Monitor 系统托盘监控工具\" style=\"width: 50%\">\n\n<p><strong>WSL Toolbox - 图形化管理 WSL 的工具箱</strong></p>\n<a class=\"button  center large\" href='https://apps.microsoft.com/detail/9ndggx7m2h0v?hl=zh-cn&gl=CN' title='WSL Toolbox 下载安装'><i class='fa-brands fa-windows'></i> WSL Toolbox 下载安装</a>\n\n<p>WSL Toolbox 是一个图形化管理 WSL 的工具箱，你可以在里面针对单个容器进行管理，包括安装、启动、停止、重启等操作。甚至可以导入和导出容器。</p>\n<p>但是，对比之前的软件，这个软件并没有系统托盘管理，且容易出现闪退的情况。</p>\n<img loading=\"lazy\" src=\"/images/2024/0606/2.jpg\" alt=\"WSL Toolbox 图形化管理 WSL 的工具箱\" style=\"width: 80%\">\n\n<h2 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h2><p>你可以在 Windows 资源管理器中访问 <i class=\"fa-brands fa-linux\">Linux</i>，如下图：</p>\n<img loading=\"lazy\" src=\"/images/2024/0606/4.jpg\" alt=\"在资源管理器中访问 Linux\" style=\"width: 80%\">\n\n<h2 id=\"使用-Visual-Studio-Code-开发\"><a href=\"#使用-Visual-Studio-Code-开发\" class=\"headerlink\" title=\"使用 Visual Studio Code 开发\"></a>使用 Visual Studio Code 开发</h2><p>如果你使用 Visual Studio Code 作为你的开发环境，那么你可以直接在 WSL 中打开你的项目，并进行开发。</p>\n<p>你仅需要安装 Visual Studio Code 并安装适用于 WSL 的插件。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0606/5.jpg\" alt=\"在 WSL 中打开项目\"></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>最后，希望本文能帮助你更好地了解 WSL，并在日常使用中提高效率。</p>\n\n  <div class=\"note-large green\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-book\"></i><p>参考链接</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <ul>\n<li><a class=\"link\"   href=\"https://learn.microsoft.com/zh-cn/windows/wsl/install\" >https://learn.microsoft.com/zh-cn/windows/wsl/install<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n<li><a class=\"link\"   href=\"https://learn.microsoft.com/zh-cn/windows/wsl/setup/environment\" >https://learn.microsoft.com/zh-cn/windows/wsl/setup/environment<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n<li><a class=\"link\"   href=\"https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands\" >https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands<i class=\"fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon\"></i></a></li>\n</ul>\n\n    </div>\n  </div>\n\n",
            "tags": [
                "新手向",
                "Linux",
                "Windows",
                "WSL"
            ]
        }
    ]
}