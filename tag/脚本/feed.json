{
    "version": "https://jsonfeed.org/version/1",
    "title": "CatIsNotFound • All posts by \"脚本\" tag",
    "description": "一个基于 Hexo 框架的个人博客网站",
    "home_page_url": "https://CatIsNotFound.github.io",
    "items": [
        {
            "id": "https://catisnotfound.github.io/2024/06/09/%E4%BB%8E-0-%E5%BC%80%E5%A7%8B%E5%AD%A6-Linux-Bash-Shell-%E8%84%9A%E6%9C%AC%E5%85%A5%E9%97%A8/",
            "url": "https://catisnotfound.github.io/2024/06/09/%E4%BB%8E-0-%E5%BC%80%E5%A7%8B%E5%AD%A6-Linux-Bash-Shell-%E8%84%9A%E6%9C%AC%E5%85%A5%E9%97%A8/",
            "title": "从 0 开始学 Linux：Bash Shell 脚本入门",
            "date_published": "2024-06-09T05:15:33.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Bash 是一个支持脚本的命令行解释器，你可以利用脚本来自动化执行一些重复性的任务。</p>\n<p>本文将在已有的基础上，学习 Bash Shell 脚本的基本语法和使用方法。若你对 Bash Shell 还不熟悉，请先阅读以下文章：</p>\n<a class=\"button  large center\" href='/2024/06/09/从-0-开始学-Linux-Bash-Shell-快速入门' title='从 0 开始学 Linux：Bash Shell 快速入门'><i class='fa-solid fa-link'></i> 从 0 开始学 Linux：Bash Shell 快速入门</a>\n\n\n<h1 id=\"脚本文件\"><a href=\"#脚本文件\" class=\"headerlink\" title=\"脚本文件\"></a>脚本文件</h1><p>脚本文件以 <code>.sh</code> 结尾，并包含一系列命令。</p>\n<p>若要运行脚本，需为脚本文件添加可执行权限并执行，也可以通过 <code>bash</code> 命令以执行。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +x &lt;脚本文件路径&gt;</span><br><span class=\"line\">./&lt;脚本文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;脚本文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h1 id=\"定义解释器\"><a href=\"#定义解释器\" class=\"headerlink\" title=\"定义解释器\"></a>定义解释器</h1><p>脚本文件第一行必须指定脚本的解释器，即 <code>/bin/bash</code>。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br></pre></td></tr></table></figure></div>\n\n<p>当然，你也可以指定其它的 Shell 解释器，如 <code>/bin/sh</code>、<code>/bin/zsh</code>等。甚至，你还可以使用 Python 解释器以执行 Python 脚本。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/python</span></span><br></pre></td></tr></table></figure></div>\n\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><p>注释以 <code>#</code> 开头，表示后面的内容为注释。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这是一行注释</span></span><br></pre></td></tr></table></figure></div>\n\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><p>变量是存储数据的容器，可以用来保存字符串、数字、列表等数据。</p>\n<h2 id=\"定义变量\"><a href=\"#定义变量\" class=\"headerlink\" title=\"定义变量\"></a>定义变量</h2><p>变量名只能包含字母、数字和下划线，且不能以数字开头。</p>\n<p>你可以利用 ` … ` 来包裹命令，或者用 <code>$(command)</code> 定义变量。其中的 <code>command</code> 为执行的命令，将输出结果赋值给变量。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义变量</span></span><br><span class=\"line\">name=<span class=\"string\">&quot;John&quot;</span></span><br><span class=\"line\">age=30</span><br><span class=\"line\"><span class=\"built_in\">pwd</span>=`<span class=\"built_in\">pwd</span>` <span class=\"comment\"># 获取当前目录路径</span></span><br><span class=\"line\">file_list=$(<span class=\"built_in\">ls</span>) <span class=\"comment\"># 获取当前目录下的文件列表</span></span><br><span class=\"line\">list=<span class=\"string\">&quot;1 4 7 10&quot;</span> <span class=\"comment\"># 列表，用空格分隔</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出变量</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> name=<span class=\"variable\">$name</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> age=<span class=\"variable\">$age</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">pwd</span>=<span class=\"variable\">$pwd</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> file_list=<span class=\"variable\">$file_list</span></span><br><span class=\"line\"><span class=\"comment\"># 循环输出列表</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;List:&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> <span class=\"variable\">$list</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$num</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"利用用户输入赋值\"><a href=\"#利用用户输入赋值\" class=\"headerlink\" title=\"利用用户输入赋值\"></a>利用用户输入赋值</h2><p>你可以利用 <code>read</code> 命令从用户输入中获取值并赋值给变量。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 利用 read 命令获取用户输入并赋值给变量</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">&quot;Please enter your name: &quot;</span> name</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Your name is <span class=\"variable\">$name</span>.&quot;</span></span><br></pre></td></tr></table></figure></div>\n\n<p><code>-p</code> 参数表示提示用户输入，<code>name</code> 为用户所赋值的变量。</p>\n<h2 id=\"特殊变量\"><a href=\"#特殊变量\" class=\"headerlink\" title=\"特殊变量\"></a>特殊变量</h2><p>在 Bash 中，有一些特殊的变量，可以用来获取系统信息等，大致如下：</p>\n<ul>\n<li><code>$0</code>： 当前脚本的文件名。</li>\n<li><code>$n</code>： 传递给脚本或函数的参数。<strong>其中，<code>n</code> 需要代替为对应的参数序号。</strong></li>\n<li><code>$#</code>： 传递给脚本或函数的参数个数。</li>\n<li><code>$*</code>： 传递给脚本或函数的所有参数。</li>\n<li><code>$@</code>： 传递给脚本或函数的所有参数，每个参数以空格分隔。</li>\n<li><code>$?</code>： 上个命令的退出状态。<code>0</code> 表示命令成功，否则表示失败。</li>\n<li><code>$$</code>： 当前 Shell 进程的进程 ID。</li>\n<li><code>$!</code>： 当前 Shell 最后运行的后台进程的进程 ID。</li>\n<li><code>$HOME</code>： 当前用户的主目录。</li>\n<li><code>$PWD</code>： 当前工作目录。</li>\n<li><code>$OLDPWD</code>： 上一个工作目录。</li>\n<li><code>$UID</code>： 当前用户的 UID。</li>\n<li><code>$EUID</code>： 当前用户的有效 UID。</li>\n<li><code>$USER</code>： 当前用户的用户名。</li>\n<li><code>$GROUPS</code>： 当前用户的组列表。</li>\n<li><code>$PATH</code>： 查找命令的路径。</li>\n</ul>\n<h2 id=\"运算变量\"><a href=\"#运算变量\" class=\"headerlink\" title=\"运算变量\"></a>运算变量</h2><p>变量还可以用来执行简单的运算。</p>\n<p>你可以利用 <code>expr</code> 命令进行基本的运算，也可以利用 <code>$((...))</code> 或 <code>$[...]</code> 进行更复杂的运算。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义变量</span></span><br><span class=\"line\">num1=10</span><br><span class=\"line\">num2=5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运算</span></span><br><span class=\"line\">result1=$((num1 + num2))</span><br><span class=\"line\">result2=$[num1 - num2]</span><br><span class=\"line\">result3=`<span class=\"built_in\">expr</span> <span class=\"variable\">$num1</span> \\* <span class=\"variable\">$num2</span>`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出结果</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;num1 + num2 = <span class=\"variable\">$result1</span>&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;num1 - num2 = <span class=\"variable\">$result2</span>&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;num1 * num2 = <span class=\"variable\">$result3</span>&quot;</span></span><br></pre></td></tr></table></figure></div>\n\n\n  <div class=\"note p-4 mb-4 rounded-small yellow icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong></p>\n<p>使用 <code>*</code> 运算符时，需要使用反转义符 <code>\\</code> 来转义。即 <code>\\*</code> 而不是 <code>*</code>。</p>\n\n  </div>\n\n<h1 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h1><p>条件语句可以根据条件执行不同的代码块。</p>\n<h2 id=\"语句结构\"><a href=\"#语句结构\" class=\"headerlink\" title=\"语句结构\"></a>语句结构</h2><div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if 语句</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ &lt;条件&gt; ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if-else 语句</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ &lt;条件&gt; ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if-elif-else 语句</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ &lt;条件1&gt; ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    &lt;代码块1&gt;</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ &lt;条件2&gt; ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    &lt;代码块2&gt;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    &lt;代码块3&gt;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><p>条件语句中可以使用以下运算符：</p>\n<ul>\n<li><code>-eq</code>：等于 <code>equals</code>。</li>\n<li><code>-ne</code>：不等于 <code>not equal</code>。</li>\n<li><code>-gt</code>：大于 <code>greater than</code>。</li>\n<li><code>-lt</code>：小于 <code>less than</code>。</li>\n<li><code>-ge</code>：大于等于 <code>greater than or equal</code>。</li>\n<li><code>-le</code>：小于等于 <code>less than or equal</code>。</li>\n</ul>\n<p>这里假设 <code>x</code> 和 <code>y</code> 分别等于 <code>10</code> 和 <code>20</code>，则：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">示例</th>\n<th align=\"center\">结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>[ $x -eq $y ]</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>[ $x -ne $y ]</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>[ $x -gt $y ]</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>[ $x -lt $y ]</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>[ $x -ge $y ]</code></td>\n<td align=\"center\"><code>false</code></td>\n</tr>\n<tr>\n<td align=\"center\"><code>[ $x -le $y ]</code></td>\n<td align=\"center\"><code>true</code></td>\n</tr>\n</tbody></table>\n\n  <div class=\"note p-4 mb-4 rounded-small yellow icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong></p>\n<p>这里的 <code>-eq</code> 等运算符前后都需要有空格。且 <code>-eq</code> 等运算符只能用于数字比较，<strong>不能用于字符串比较</strong>。</p>\n\n  </div>\n\n<h2 id=\"字符串比较\"><a href=\"#字符串比较\" class=\"headerlink\" title=\"字符串比较\"></a>字符串比较</h2><p>条件语句也可以比较字符串。通常，字符串比较使用 <code>==</code> 、 <code>!=</code>、<code>=~</code> 等运算符。</p>\n<ul>\n<li><p>字符串相等关系可以使用 <code>==</code> 运算符，表示任意字符串相等关系。</p>\n</li>\n<li><p>字符串包含关系可以使用 <code>=~</code> 或者 <code>*string*</code> 运算符，表示任意字符串包含关系。</p>\n</li>\n<li><p>字符串不匹配关系可以使用 <code>!=</code> 运算符，表示任意字符串不匹配关系。</p>\n</li>\n<li><p>字符串不包含关系可以使用 <code>!=</code> 运算符和 <code>*</code> 运算符，表示任意字符串不包含关系。</p>\n</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义变量</span></span><br><span class=\"line\">str1=<span class=\"string\">&quot;helloworld&quot;</span></span><br><span class=\"line\">str2=<span class=\"string\">&quot;owo&quot;</span></span><br><span class=\"line\">str3=<span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串比较</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$str1</span> == <span class=\"variable\">$str3</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;str1 is equal to str2&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串包含</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$str1</span> =~ <span class=\"variable\">$str2</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;str2 is included in str1&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$str1</span> == *<span class=\"variable\">$str3</span>* ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;str3 is included in str1&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串不匹配</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$str1</span> != <span class=\"variable\">$str2</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;str1 is not equal to str2&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串不包含</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$str2</span> != *<span class=\"variable\">$str3</span>* ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;str2 is not included in str1&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h2><p>条件语句还可以使用逻辑运算符 <code>&amp;&amp;</code> 和 <code>||</code> 来组合多个条件。</p>\n<ul>\n<li><code>&amp;&amp;</code>： 逻辑与 <code>and</code>。</li>\n<li><code>||</code>： 逻辑或 <code>or</code>。</li>\n</ul>\n<p>示例：判断 <code>var1</code> 和 <code>var2</code> 是否都在 <code>vars</code> 列表中， <code>var2</code> 或 <code>var3</code> 两者之中是否有一元素在 <code>vars</code> 列表中。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义变量</span></span><br><span class=\"line\">var1=<span class=\"string\">&quot;apple&quot;</span></span><br><span class=\"line\">var2=<span class=\"string\">&quot;banana&quot;</span></span><br><span class=\"line\">var3=<span class=\"string\">&quot;orange&quot;</span></span><br><span class=\"line\">vars=<span class=\"string\">&quot;[apple banana cherry]&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$var1</span> =~ <span class=\"variable\">$vars</span> ]] &amp;&amp; [[ <span class=\"variable\">$var2</span> == *<span class=\"variable\">$vars</span>* ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;var1 and var2 are in vars&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$var2</span> =~ <span class=\"variable\">$vars</span> ]] || [[ <span class=\"variable\">$var3</span> =~ <span class=\"variable\">$vars</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;var2 or var3 are in vars&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>示例 1：判断 <code>~/apt/history.log</code> 文件是否存在，若不存在，则复制 <code>/var/log/apt/history.log</code> 文件到 <code>~/apt/history.log</code> 中。</p>\n<p>注意：你还需要判断 <code>~/apt</code> 目录是否存在。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 判断 ~/apt 目录是否存在</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d ~/apt ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">mkdir</span> ~/apt</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断 ~/apt/history.log 文件是否存在</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -f ~/apt/history.log ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">cp</span> /var/log/apt/history.log ~/apt/history.log</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></div>\n\n<p>示例 2：判断当前用户是否为 <code>root</code>，若不是，则提示用户输入密码。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># 判断当前用户是否为 root</span></span><br><span class=\"line\"><span class=\"comment\"># 方法一：利用 $UID 变量，若等于 0，则当前用户为 root</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$UID</span> -ne 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Please use root account to run this script.&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You are root.&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法二：利用 $EUID 变量，若等于 0，则当前用户为 root</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$EUID</span> -ne 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Please use root account to run this script.&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You are root.&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法三：利用 $USER 变量，若等于 root，则当前用户为 root</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$USER</span> != <span class=\"string\">&quot;root&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Please use root account to run this script.&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You are root.&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></div>\n\n\n<h1 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h1><p>循环语句可以重复执行代码块。</p>\n<h2 id=\"语句结构-1\"><a href=\"#语句结构-1\" class=\"headerlink\" title=\"语句结构\"></a>语句结构</h2><p>在使用 <code>for</code> 循环时，变量的取值可以是列表、范围或命令的输出结果。</p>\n<p>其中的 <code>&lt;命令&gt;</code> 可以用反引号 ` … ` 包裹，也可以用 <code>$()</code> 包裹。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for 循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> &lt;变量&gt; <span class=\"keyword\">in</span> &lt;值1&gt; &lt;值2&gt;...; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> &lt;变量&gt; <span class=\"keyword\">in</span> &#123;&lt;值1&gt;..&lt;值2&gt;&#125;; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> &lt;变量&gt; <span class=\"keyword\">in</span> [`&lt;命令&gt;` || $(&lt;命令&gt;)]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># while 循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> [ &lt;条件&gt; ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># until 循环</span></span><br><span class=\"line\"><span class=\"keyword\">until</span> [ &lt;条件&gt; ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"循环控制\"><a href=\"#循环控制\" class=\"headerlink\" title=\"循环控制\"></a>循环控制</h2><p>循环语句还可以控制循环的次数。</p>\n<ul>\n<li><code>break</code>： 跳出循环。</li>\n<li><code>continue</code>： 跳过当前循环，继续下一次循环。</li>\n</ul>\n<h2 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>示例 1：打印 1 到 10 的偶数。当遇到 6 时，跳出循环。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for 循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..10&#125;; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $((i%<span class=\"number\">2</span>)) -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$i</span> -eq 6 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<p>若你对 Java 熟悉，你可能还会发现 <code>for</code> 循环的语法类似于 Java 中的 <code>for</code> 循环。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># for 循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ((i=<span class=\"number\">1</span>; i&lt;<span class=\"number\">10</span>; i+=<span class=\"number\">2</span>)); <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$i</span> -eq 6 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<p>示例 2：打印 1 到 10 的所有偶数，当遇到 6 时，跳过当前循环，继续下一次循环。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># while 循环</span></span><br><span class=\"line\">count=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> [ <span class=\"variable\">$count</span> -lt 10 ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    count=$((count+<span class=\"number\">2</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$count</span> -eq 6 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$count</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<p>示例 3：打印 1 到 10 的所有偶数，当遇到 4 时，跳过当前循环；当遇到 6 时，跳出循环。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># until 循环</span></span><br><span class=\"line\">count=0</span><br><span class=\"line\"><span class=\"keyword\">until</span> [ <span class=\"variable\">$count</span> -eq 10 ]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    count=$((count+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$count</span> -eq 4 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$count</span> -eq 6 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$count</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<h1 id=\"选择语句\"><a href=\"#选择语句\" class=\"headerlink\" title=\"选择语句\"></a>选择语句</h1><p>选择语句可以根据用户的选择执行不同的代码块。</p>\n<h2 id=\"语句结构-2\"><a href=\"#语句结构-2\" class=\"headerlink\" title=\"语句结构\"></a>语句结构</h2><p><code>select</code> 语句可以让用户从列表、范围、命令输出结果中选择一个值，并赋值给变量。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># select 语句</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> &lt;变量&gt; <span class=\"keyword\">in</span> [&lt;值1&gt; &lt;值2&gt;... || &#123;&lt;值1&gt;..&lt;值2&gt;&#125;]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> &lt;变量&gt; <span class=\"keyword\">in</span> [`<span class=\"built_in\">command</span>` || $(<span class=\"built_in\">command</span>)]; <span class=\"keyword\">do</span></span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n<p><code>case</code> 语句也可以根据变量的值执行不同的代码块。使用 <code>case</code> 语句时需要注意以下几点：</p>\n<ol>\n<li><code>case</code> 语句必须与 <code>esac</code> 配对使用。</li>\n<li><code>case</code> 语句中的 <code>in</code> 必须与 <code>)</code> 配对使用。</li>\n<li><code>case</code> 语句中的 <code>;;</code> 必须与 <code>)</code> 配对使用。</li>\n<li><code>case</code> 语句中的 <code>*)</code> 表示其他情况。</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> &lt;变量&gt; <span class=\"keyword\">in</span></span><br><span class=\"line\">    &lt;值1&gt;)</span><br><span class=\"line\">        &lt;代码块1&gt;</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    &lt;值2&gt;)</span><br><span class=\"line\">        &lt;代码块2&gt;</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">        &lt;代码块3&gt;</span><br><span class=\"line\">        ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure></div>\n\n\n  <div class=\"note p-4 mb-4 rounded-small red icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong></p>\n<p>选择语句只能在交互式 Shell 中使用，如 <code>bash</code> 或 <code>zsh</code>。</p>\n<p>注意每条命令的结尾必须以 <code>;;</code> 结尾，表示选择结束。</p>\n\n  </div>\n\n<h2 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>示例 1：提示用户输入数字，并根据输入执行不同的操作。</p>\n<ul>\n<li>输入 <code>start</code> 时启动服务器；</li>\n<li>输入 <code>stop</code> 时停止服务器；</li>\n<li>输入 <code>restart</code> 时重启服务器；</li>\n<li>输入 <code>exit</code> 时退出脚本。</li>\n<li>输入其他内容时显示错误信息。</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># select 语句</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Please select an option:&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># select 语句</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Please select an option:&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> option <span class=\"keyword\">in</span> start stop restart <span class=\"built_in\">exit</span>; <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$option</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">        start)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Starting the server...&quot;</span></span><br><span class=\"line\">            ;;</span><br><span class=\"line\">        stop)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Stopping the server...&quot;</span></span><br><span class=\"line\">            ;;</span><br><span class=\"line\">        restart)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Restarting the server...&quot;</span></span><br><span class=\"line\">            ;;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Exit...&quot;</span></span><br><span class=\"line\">            <span class=\"built_in\">break</span></span><br><span class=\"line\">            ;;</span><br><span class=\"line\">        *)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Invalid option&quot;</span></span><br><span class=\"line\">            ;;</span><br><span class=\"line\">    <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></div>\n\n\n  <div class=\"note p-4 mb-4 rounded-small yellow icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong></p>\n<p>当执行 <code>select</code> 语句时，脚本会持续循环，直到用户输入 <code>exit</code> 选项才能退出循环。</p>\n<p>若用户需要直接退出程序，按下 <code>Ctrl+C</code> 即可。</p>\n\n  </div>\n\n<p>示例 2：提示用户输入数字，并根据输入执行不同的操作。</p>\n<ol>\n<li>输入 <code>1</code> 时，打印 <code>You entered 1</code>。</li>\n<li>输入 <code>2</code> 时，打印 <code>You entered 2</code>。</li>\n<li>输入 <code>3</code> 时，打印 <code>You entered 3</code>。</li>\n<li>输入其他值时，打印 <code>Invalid input</code>。</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># case 语句</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;Please enter a number:&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> num</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$num</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    1)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You entered 1&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    2)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You entered 2&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    3)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You entered 3&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Invalid input&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure></div>\n\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><p>函数可以将一系列命令封装成一个整体，可以重复使用。</p>\n<h2 id=\"语法结构\"><a href=\"#语法结构\" class=\"headerlink\" title=\"语法结构\"></a>语法结构</h2><div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> &lt;函数名 1&gt;() &#123;</span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> &lt;返回值&gt;  <span class=\"comment\"># 可选语句，但必须在函数体最后一行</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者可以省略 function 关键字</span></span><br><span class=\"line\">&lt;函数名 2&gt;() &#123;</span><br><span class=\"line\">    &lt;代码块&gt;</span><br><span class=\"line\">    &lt;函数名 1&gt; [&lt;参数&gt;]   <span class=\"comment\"># 可以调用其他函数</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> &lt;返回值&gt;    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\">&lt;函数名&gt;</span><br></pre></td></tr></table></figure></div>\n\n\n  <div class=\"note p-4 mb-4 rounded-small yellow icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong> 关于函数定义，你需要注意以下几点：</p>\n<ol>\n<li><p>函数定义时，函数名只能包含字母、数字和下划线，且不能以数字开头。</p>\n</li>\n<li><p>函数调用时，函数名后面可以加上参数，参数之间用空格分隔。</p>\n</li>\n<li><p>函数定义时，函数体必须用花括号 <code>{}</code> 包裹。</p>\n</li>\n<li><p>函数定义时，函数体内的变量作用域为局部变量，函数执行结束后，局部变量会被销毁。</p>\n</li>\n<li><p>函数可以返回值，使用 <code>return</code> 语句。但必须将 <code>return</code> 语句置于函数体最后一行。否则，函数将立即结束。</p>\n</li>\n<li><p>函数可以调用其他函数。</p>\n</li>\n</ol>\n\n  </div>\n\n<h2 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>示例 1：定义一个函数 <code>hello()</code>，要求用户输入姓名，并打印 <code>Hello, &lt;姓名&gt;!</code>。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">hello</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Hello, <span class=\"variable\">$1</span>!&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">&quot;Please enter your name: &quot;</span> name</span><br><span class=\"line\">hello <span class=\"variable\">$name</span></span><br></pre></td></tr></table></figure></div>\n\n<p>示例 2：定义一个函数 <code>times()</code> 和一个函数 <code>sum()</code>，要求用户输入一个数字，并打印 <code>The sum is &lt;结果&gt;</code>。</p>\n<p>参考输入输出：</p>\n<ul>\n<li><code>3</code> –&gt; <code>The sum is 6</code></li>\n<li><code>5</code> –&gt; <code>The sum is 120</code></li>\n<li><code>10</code> –&gt; <code>The sum is 3628800</code></li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">times</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> $(( <span class=\"variable\">$1</span> * <span class=\"variable\">$2</span> )) <span class=\"comment\"># 即 $total * $i，计算阶乘</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">sum</span></span>() &#123;</span><br><span class=\"line\">    total=1</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (( i=<span class=\"number\">1</span>; i&lt;=<span class=\"variable\">$1</span>; i++ )); <span class=\"keyword\">do</span></span><br><span class=\"line\">        total=`<span class=\"built_in\">times</span> <span class=\"variable\">$total</span> <span class=\"variable\">$i</span>`  <span class=\"comment\"># 调用 times 函数，计算阶乘</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;The sum is <span class=\"variable\">$total</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">&quot;Please enter a number: &quot;</span> num</span><br><span class=\"line\"><span class=\"built_in\">sum</span> <span class=\"variable\">$num</span></span><br></pre></td></tr></table></figure></div>\n\n<p>示例 3：定义一个函数 <code>install_packages()</code>，要求用户输入软件包名，并安装指定的软件包。定义一个函数 <code>package_manager()</code>，用于搜寻系统中可用的软件包管理工具，并安装指定的软件包。</p>\n<p>注意：针对 Arch Linux 使用的 <code>pacman</code> 的命令有所不同，需要进行单独修改。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">install_packages</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 假如没有输入软件包名</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ ! <span class=\"variable\">$2</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Error: Please enter a package name.&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"comment\"># 假如使用的是 pacman</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"variable\">$1</span> == pacman ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">sudo</span> pacman -S <span class=\"variable\">$2</span> --noconfirm</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">sudo</span> <span class=\"variable\">$1</span> install <span class=\"variable\">$2</span> -y</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">package_manager</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> manager <span class=\"keyword\">in</span> apt dnf pacman yum zypper; <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"built_in\">which</span> <span class=\"variable\">$manager</span> &amp;&gt; /dev/null</span><br><span class=\"line\">        <span class=\"comment\"># 假如对应的包管理工具存在，则安装软件包</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -eq 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Using <span class=\"variable\">$manager</span> to install <span class=\"variable\">$1</span>&quot;</span></span><br><span class=\"line\">            install_packages <span class=\"variable\">$manager</span> <span class=\"variable\">$1</span> </span><br><span class=\"line\">            <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;No package manager found&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> -p <span class=\"string\">&quot;Please enter a package name: &quot;</span> package</span><br><span class=\"line\">package_manager <span class=\"variable\">$package</span></span><br></pre></td></tr></table></figure></div>",
            "tags": [
                "Linux",
                "新手向",
                "脚本"
            ]
        },
        {
            "id": "https://catisnotfound.github.io/2024/06/09/%E4%BB%8E-0-%E5%BC%80%E5%A7%8B%E5%AD%A6-Linux-Bash-Shell-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "url": "https://catisnotfound.github.io/2024/06/09/%E4%BB%8E-0-%E5%BC%80%E5%A7%8B%E5%AD%A6-Linux-Bash-Shell-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/",
            "title": "从 0 开始学 Linux：Bash Shell 快速入门",
            "date_published": "2024-06-09T05:10:00.000Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"写在最前\"><a href=\"#写在最前\" class=\"headerlink\" title=\"写在最前\"></a>写在最前</h1><p>本教程将介绍一些基本的 Bash 命令行操作，包括目录操作、文件操作、文件处理等。</p>\n<p>文中出现的命令块中的 <code>[Content]</code> 表示可选内容，即可以省略。<code>&lt;Content&gt;</code> 表示必填内容，不可省略。</p>\n<p>命令块示例：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install &lt;软件包&gt; [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>&lt;软件包&gt;</code> 表示必填，<code>[-y]</code> 表示可选。</p>\n\n  <div class=\"note-large blue\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-book\"></i><p>准备之前</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>在阅读本文教程之前，如果还未安装 Linux 环境，请先在下方按钮中选择任一方式以进行安装：</p>\n<p><a class=\"button  center large\" href='/2024/04/26/从-0-开始学-Linux-安装-Ubuntu-24-04-LTS-系统' title='从 0 开始学 Linux - 安装 Ubuntu 24.04 LTS 系统'><i class='fa-solid fa-link'></i> 从 0 开始学 Linux - 安装 Ubuntu 24.04 LTS 系统</a></p>\n<p><a class=\"button  center large\" href='/2024/06/06/WSL：一个适用于-Windows-的-Linux-子系统' title='WSL：一个适用于 Windows 的 Linux 子系统'><i class='fa-solid fa-link'></i> WSL：一个适用于 Windows 的 Linux 子系统</a></p>\n\n    </div>\n  </div>\n\n<h1 id=\"Bash-命令行\"><a href=\"#Bash-命令行\" class=\"headerlink\" title=\"Bash 命令行\"></a>Bash 命令行</h1><p>Bash 是一种交互式命令行解释器，它提供命令行界面，让用户可以执行命令、查看文件、创建目录、删除文件等操作。</p>\n<h2 id=\"命令组成\"><a href=\"#命令组成\" class=\"headerlink\" title=\"命令组成\"></a>命令组成</h2><p>Bash 命令由命令名和参数组成。</p>\n<p>命令名：命令的名称，如 <code>ls</code>、<code>cd</code>、<code>mkdir</code>、<code>rm</code> 等。</p>\n<p>参数：命令的附加信息，通常以 <code>-o</code> 或者 <code>--option</code> 形式出现。参数可以混合使用。</p>\n<p>命令组成示例：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> -l -h -a</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -lah</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"输入命令\"><a href=\"#输入命令\" class=\"headerlink\" title=\"输入命令\"></a>输入命令</h2><ol>\n<li><p>直接在命令行中输入完整的命令，并按下 <code>Enter</code> 键。</p>\n</li>\n<li><p>在命令行中输入命令的前缀或输入文件路径时，按下 <code>Tab</code> 键，Bash 会自动补全命令。</p>\n</li>\n<li><p>使用历史命令：</p>\n<ul>\n<li>输入 <code>history</code> 命令，可以查看历史命令。</li>\n<li>在命令行中输入 <code>!&lt;命令编号&gt;</code>，可以执行历史命令。</li>\n</ul>\n</li>\n<li><p>命令回溯：</p>\n<ul>\n<li>使用方向键 <code>↑</code> 和 <code>↓</code> 可以回溯历史命令。</li>\n<li>使用快捷键 <code>Ctrl</code> + <code>R</code>，可以快速执行之前的命令。</li>\n</ul>\n</li>\n<li><p>编辑命令：</p>\n<ul>\n<li>使用 <code>Ctrl</code> + <code>A</code> 定位到命令行首。</li>\n<li>使用 <code>Ctrl</code> + <code>E</code> 定位到命令行尾。</li>\n<li>使用 <code>Ctrl</code> + <code>K</code> 删除光标到命令行尾的内容。</li>\n<li>使用 <code>Ctrl</code> + <code>U</code> 删除光标到命令行首的内容。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"退出命令行\"><a href=\"#退出命令行\" class=\"headerlink\" title=\"退出命令行\"></a>退出命令行</h2><p>退出命令行有两种方式：</p>\n<ol>\n<li><p>直接按下 <code>Ctrl</code> + <code>D</code> 键。</p>\n</li>\n<li><p>输入 <code>exit</code> 命令。</p>\n</li>\n</ol>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><p>以下是一些常用的命令，包括目录操作、文件操作、文件处理等。</p>\n<p>若需要了解更多命令，请直接查询 Linux Shell 基础命令速查表（非完整版）。</p>\n<a class=\"button  center large\" href='/2024/04/25/Linux-Shell-命令速查表' title='Linux Shell 基础命令速查表'><i class='fa-solid fa-link'></i> Linux Shell 基础命令速查表</a>\n\n<h2 id=\"管理软件包\"><a href=\"#管理软件包\" class=\"headerlink\" title=\"管理软件包\"></a>管理软件包</h2><p>你可以利用命令行实现安装、卸载、更新软件包等操作。</p>\n<p><strong>不同的 Linux 发行版，所对应的包管理器有所不同。</strong> 请根据自己所用的发行版系统对号入座。</p>\n<div class=\"tabs\" id=\"tab-pkg-manager\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#pkg-manager-1\">Debian / Ubuntu</a></li><li class=\"tab\"><a class=\"#pkg-manager-2\">Fedora / Red Hat</a></li><li class=\"tab\"><a class=\"#pkg-manager-3\">Arch / Manjaro</a></li><li class=\"tab\"><a class=\"#pkg-manager-4\">openSUSE</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"pkg-manager-1\"><ul>\n<li>安装软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt install &lt;软件包名&gt; [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>-y</code> 参数可选，表示跳过确认并直接安装。</p>\n<ul>\n<li>更新软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt upgrade [-y]</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>卸载软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> apt remove &lt;软件包名&gt; [-y]</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt autoremove [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>或者，直接执行 <code>sudo apt purge &lt;软件包名&gt; [-y]</code> 即可。</p>\n<ul>\n<li>搜索软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt search &lt;软件包名&gt; [--full-name-only | --names-only]</span><br></pre></td></tr></table></figure></div>\n\n<p><code>--full-name-only</code>： 参数可选，仅显示完整的软件包名称；</p>\n<p><code>--names-only</code>： 参数可选，仅显示软件包名称。</p></div><div class=\"tab-pane\" id=\"pkg-manager-2\"><div class=\"note p-4 mb-4 rounded-small yellow icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong></p>\n<p>若你的 Red Hat 版本低于 8.0（不包括 8.0），请将 <code>dnf</code> 替换为 <code>yum</code>。</p>\n<p>如果你不确定当前是否可以使用 <code>dnf</code>，请直接执行 <code>which dnf</code> 即可。</p>\n\n  </div>\n\n<ul>\n<li>安装软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> dnf install &lt;软件包名&gt; [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>-y</code> 参数可选，表示跳过确认并直接安装。</p>\n<ul>\n<li>更新软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> dnf upgrade [-y]</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>卸载软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> dnf remove &lt;软件包名&gt; [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>或者，直接执行 <code>sudo dnf erase &lt;软件包名&gt; [-y]</code> 即可。</p>\n<ul>\n<li>搜索软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnf search &lt;软件包名&gt;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-pane\" id=\"pkg-manager-3\"><ul>\n<li>安装软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -S &lt;软件包名&gt; [--noconfirm]</span><br></pre></td></tr></table></figure></div>\n\n<p><code>--noconfirm</code>： 参数可选，表示跳过确认并直接安装。</p>\n<ul>\n<li>更新软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -Syu</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>卸载软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> pacman -R &lt;软件包名&gt; [--noconfirm]</span><br></pre></td></tr></table></figure></div>\n\n<p>或者，直接执行 <code>sudo pacman -Rs &lt;软件包名&gt; [--noconfirm]</code> 即可。</p>\n<ul>\n<li>搜索软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -Ss &lt;软件包名&gt;</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-pane\" id=\"pkg-manager-4\"><ul>\n<li>安装软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> zypper install &lt;软件包名&gt; [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>-y</code> 参数可选，表示跳过确认并直接安装。</p>\n<ul>\n<li>更新软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> zypper refresh</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> zypper update [-y]</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>卸载软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> zypper remove &lt;软件包名&gt; [-y]</span><br></pre></td></tr></table></figure></div>\n\n<p>或者，直接执行 <code>sudo zypper rm &lt;软件包名&gt; [-y]</code> 即可。</p>\n<ul>\n<li>搜索软件包：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zypper search &lt;软件包名&gt;</span><br></pre></td></tr></table></figure></div></div></div></div>\n\n<h2 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h2><p>你可以利用命令行实现文件管理操作，如创建、删除、移动、复制文件或目录。</p>\n<h3 id=\"目录操作\"><a href=\"#目录操作\" class=\"headerlink\" title=\"目录操作\"></a>目录操作</h3><ul>\n<li>切换工作目录：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> &lt;目录路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>特别的目录路径有：</p>\n<ol>\n<li><code>~</code> 表示当前用户的主目录。</li>\n<li><code>-</code> 表示回到上一次所在的目录。</li>\n<li><code>.</code> 表示当前目录。</li>\n<li><code>..</code> 表示上级目录。</li>\n</ol>\n<ul>\n<li>创建目录：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> [-p] &lt;目录路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>-p</code> 参数可选，表示创建父目录。</p>\n<ul>\n<li>删除目录：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -r &lt;目录路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>-r</code> 参数可选，表示递归删除目录及其内容。</p>\n<ul>\n<li>复制目录：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r &lt;源目录路径&gt; &lt;目标目录路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>或者，直接执行 <code>cp -r &lt;源目录路径&gt;/* &lt;目标目录路径&gt;</code> 即可。</p>\n<ul>\n<li>移动目录：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> &lt;源目录路径&gt; &lt;目标目录路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><code>mv</code> 命令既可以实现文件或目录的移动，同时也可以重命名。</p>\n<p>比如：<code>mv file1.txt file2.txt</code> 可以将 <code>file1.txt</code> 重命名为 <code>file2.txt</code>。</p>\n<ul>\n<li>查看目录内容：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> [目录路径] [参数]</span><br></pre></td></tr></table></figure></div>\n\n<p>直接输入 <code>ls</code> 将显示当前目录的内容。</p>\n<p>其中，<code>ls</code> 常用的参数有：</p>\n<ul>\n<li><code>-a</code>： 显示所有文件，包括隐藏文件。</li>\n<li><code>-l</code>： 显示详细信息，包括文件权限、所有者、大小、修改时间等。</li>\n<li><code>-h</code>： 以人类可读的方式显示文件大小。</li>\n<li><code>-R</code>： 递归显示目录下的所有文件。</li>\n</ul>\n<h3 id=\"文件操作\"><a href=\"#文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h3><ul>\n<li>创建文件：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">touch</span> &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>删除文件：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>复制文件：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> &lt;源文件路径&gt; &lt;目标文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>移动文件：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> &lt;源文件路径&gt; &lt;目标文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>查看文件内容：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>查看文件属性：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &lt;文件路径&gt;</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -l &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li>查看文件大小：</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">du</span> -sh &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"文件处理\"><a href=\"#文件处理\" class=\"headerlink\" title=\"文件处理\"></a>文件处理</h2><p>你可以通过命令行实现文件处理操作。</p>\n<h3 id=\"写入文件\"><a href=\"#写入文件\" class=\"headerlink\" title=\"写入文件\"></a>写入文件</h3><p>写入文件有多种方式，以下介绍几种常用方法：</p>\n<p><strong>方法一：使用 <code>echo</code> 可以将内容写入文件。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> &lt;内容&gt; &gt; &lt;文件路径&gt;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> &lt;内容&gt; &gt;&gt; &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<ol>\n<li><p><code>&gt;</code> 表示写入文件，若文件内容存在，则覆盖原有内容；</p>\n</li>\n<li><p><code>&gt;&gt;</code> 表示追加内容到文件末尾。</p>\n</li>\n</ol>\n<p><strong>方法二：使用 <code>tee</code> 命令可以将内容写入文件，并同时输出到屏幕。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tee</span> [-a] &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>执行此命令后，你可以输入内容并按下回车，内容将同时写入文件和屏幕。若要结束输入，请按下快捷键： <code>Ctrl</code> + <code>D</code> 或 <code>Ctrl</code> + <code>C</code>。</p>\n<p>其中的 <code>-a</code> 参数可选，表示追加内容到文件末尾。</p>\n<p><strong>方法三：使用 <code>cat</code> 命令将内容写入文件。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt; &lt;文件路径&gt;</span><br><span class=\"line\"><span class=\"built_in\">cat</span> &gt;&gt; &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>执行此命令后，你可以输入内容并按下回车，内容将写入文件。若要结束输入，请按下快捷键： <code>Ctrl</code> + <code>D</code> 或 <code>Ctrl</code> + <code>C</code>。</p>\n<h3 id=\"读取文件\"><a href=\"#读取文件\" class=\"headerlink\" title=\"读取文件\"></a>读取文件</h3><p><strong>方法一：使用 <code>cat</code> 命令读取文件内容。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>方法二：使用 <code>less</code> 命令分页显示文件内容。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>方法三：使用 <code>head</code> 命令显示文件开头内容。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">head</span> [-n &lt;行数&gt;] &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>方法四：使用 <code>tail</code> 命令显示文件末尾内容。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tail</span> [-n &lt;行数&gt;] &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>方法五：使用 <code>grep</code> 命令搜索文件内容。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep &lt;搜索内容&gt; &lt;文件路径&gt;</span><br></pre></td></tr></table></figure></div>\n\n<p>或者你可以利用 <code>cat</code>、 <code>grep</code> 以及管道符 <code>|</code> 组合命令以搭配使用。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt;文件路径&gt; | grep &lt;搜索内容&gt;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"搜索文件\"><a href=\"#搜索文件\" class=\"headerlink\" title=\"搜索文件\"></a>搜索文件</h3><p><strong>方法一：使用 <code>find</code> 命令搜索文件。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find &lt;目录路径&gt; [选项]</span><br></pre></td></tr></table></figure></div>\n\n<p>其中，<code>find</code> 命令常用的参数有：</p>\n<ol>\n<li><code>-name</code>： 指定文件名。</li>\n<li><code>-type</code>： 指定文件类型。<ul>\n<li><code>f</code>： 显示普通文件。</li>\n<li><code>d</code>： 显示目录。</li>\n<li><code>l</code>： 显示符号链接。</li>\n</ul>\n</li>\n<li><code>-iname</code>： 指定文件名，<strong>不区分大小写</strong>。</li>\n<li><code>-size</code>： 指定文件大小。<ul>\n<li><code>+n</code>： 大于 <code>n</code> 字节的文件。</li>\n<li><code>-n</code>： 小于 <code>n</code> 字节的文件。</li>\n<li><code>n</code>： 等于 <code>n</code> 字节的文件。</li>\n</ul>\n</li>\n<li><code>-mtime</code>： 指定文件最后修改时间。<ul>\n<li><code>+n</code>： 距离现在 <code>n</code> 天以内的文件。</li>\n<li><code>-n</code>： 距离现在 <code>n</code> 天以前的文件。</li>\n<li><code>n</code>： 距离现在 <code>n</code> 天的文件。</li>\n</ul>\n</li>\n<li><code>-exec</code>： 执行命令。</li>\n</ol>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find &lt;目录路径&gt; -name &lt;文件名&gt; -<span class=\"built_in\">exec</span> &lt;命令&gt; &#123;&#125; \\;</span><br></pre></td></tr></table></figure></div>\n\n<p>其中的 <code>&#123;&#125;</code> 表示搜索结果中的每一个文件名。</p>\n<p><strong>方法二：使用 <code>locate</code> 命令搜索文件。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">locate &lt;文件名&gt;</span><br></pre></td></tr></table></figure></div>\n\n\n  <div class=\"note p-4 mb-4 rounded-small yellow icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-exclamation-triangle\"></i><p><strong>注意：</strong></p>\n<p>部分发行版可能没有安装 <code>locate</code> 命令，请直接使用对应的包管理器以安装 <code>mlocate</code>。</p>\n<p>具体安装方法，请见：<a href=\"#%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6%E5%8C%85\">管理软件包</a> 一节</p>\n\n  </div>\n\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>以上仅介绍了一些基本的 Bash 命令行操作，若需要了解更多命令，请直接查询 Linux Shell 基础命令速查表（非完整版）。</p>\n<a class=\"button  center large\" href='/2024/04/25/Linux-Shell-命令速查表' title='Linux Shell 基础命令速查表'><i class='fa-solid fa-link'></i> Linux Shell 基础命令速查表</a>\n\n<p>若在学习过程中遇到问题，欢迎在评论区留言。</p>\n\n  <div class=\"note-large green\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-book\"></i><p>跳转提示</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>若你需要学习 Bash 脚本，请点击下方按钮：</p>\n<p><a class=\"button  center large\" href='/2024/06/09/从-0-开始学-Linux-Bash-Shell-脚本入门' title='从 0 开始学 Linux - Bash Shell 脚本入门'><i class='fa-solid fa-link'></i> 从 0 开始学 Linux - Bash Shell 脚本入门</a></p>\n\n    </div>\n  </div>",
            "tags": [
                "Linux",
                "新手向",
                "脚本"
            ]
        }
    ]
}