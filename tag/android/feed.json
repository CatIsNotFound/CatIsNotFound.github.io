{
    "version": "https://jsonfeed.org/version/1",
    "title": "CatIsNotFound • All posts by \"android\" tag",
    "description": "一个基于 Hexo 框架的个人博客网站",
    "home_page_url": "https://CatIsNotFound.github.io",
    "items": [
        {
            "id": "https://catisnotfound.github.io/2024/06/%E7%B3%BB%E7%BB%9F%E4%BD%93%E9%AA%8C-%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-Android-x86-%E7%B3%BB%E7%BB%9F/",
            "url": "https://catisnotfound.github.io/2024/06/%E7%B3%BB%E7%BB%9F%E4%BD%93%E9%AA%8C-%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85-Android-x86-%E7%B3%BB%E7%BB%9F/",
            "title": "系统体验：虚拟机安装 Android x86 系统",
            "date_published": "2024-06-15T08:32:59.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>本文主要介绍了 Android x86 系统的安装、使用、体验等。如果你对 Android x86 系统感兴趣，可以参考下面的内容。(*^_^*)</p>\n\n  <div class=\"note-large regular\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-book\"></i><p>Android x86 项目简介</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <img loading=\"lazy\" src=\"https://imagekit.androidphoria.com/wp-content/uploads/Android-x86-llega-a-9-Pie.jpg\" alt=\"Android x86\" width=\"500\" />\n\n<p>这是一个将 Android 开源项目移植到 x86 平台的项目，以前称为“支持 android x86 的补丁托管”。 最初的计划是托管来自开源社区的 android x86 支持的不同补丁。在我们创建项目几个月后，我们发现我们可以做的不仅仅是托管补丁。因此，我们决定创建代码库 在不同的 x86 平台上提供支持，并设置 Git 服务器来托管它。</p>\n\n    </div>\n  </div>\n\n<p>在阅读此文前，如果你是需要在自己的电脑上体验原生版本的 Android 系统，那么 Android x86 系统是一个备选方案。</p>\n<p>但是如果你需要获得更好的性能，那么你可以来试试体验 Bliss OS（基于 Android x86 系统的改良版）。</p>\n<p>关于 Bliss OS，你可以访问官方网站：<a class=\"link\"   href=\"https://blissos.org/\" >https://blissos.org/ <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a></p>\n<h1 id=\"下载-Android-x86-系统\"><a href=\"#下载-Android-x86-系统\" class=\"headerlink\" title=\"下载 Android x86 系统\"></a>下载 Android x86 系统</h1><p>你可以通过以下途径来下载 Android x86 系统，具体取决于你的网络环境：</p>\n<p>官方途径：</p>\n<a class=\"button  regular\" href='https://www.android-x86.org/releases.html' title='官方下载'><i class='fas fa-download'></i> 官方下载</a>\n\n<p>其它的官方途径：</p>\n<a class=\"button  regular\" href='https://sourceforge.net/projects/android-x86/files/' title='SourceForge 下载'><i class='fas fa-download'></i> SourceForge 下载</a>\n\n<a class=\"button  regular\" href='https://www.fosshub.com/Android-x86.html' title='FossHub 下载'><i class='fas fa-download'></i> FossHub 下载</a>\n\n<p>如果以上两种下载链接都无法下载，请直接以下按钮以进行下载：</p>\n\n  <div class=\"note p-4 mb-4 rounded-small danger icon-padding\">\n    <i class=\"note-icon fa-solid fa-solid fa-circle-info\"></i><p><strong>注意：</strong></p>\n<p>此版本仅提供 Android 9.0 r2 镜像（到 2024 年 6 月 15 日为止为最新版本镜像），其它版本还需自行在外网上寻找。</p>\n<p>下载链接已奉献上：</p>\n<p><br><br></p>\n<p><a class=\"button  regular\" href='https://www.filehorse.com/download-android-x86-32/' title='Android x86 9.0 r2 镜像'><i class='fa-brands fa-android'></i> Android x86 9.0 r2 镜像</a></p>\n\n  </div>\n\n<h1 id=\"安装-Android-x86-系统\"><a href=\"#安装-Android-x86-系统\" class=\"headerlink\" title=\"安装 Android x86 系统\"></a>安装 Android x86 系统</h1><p>下载完 Android x86 系统镜像后，你可以使用 Rufus 等工具将其刻录到 U 盘中，然后使用 U 盘启动进入安装程序。本文不在此基础上展开。</p>\n<p>这里本文仅以 VMware 虚拟机的形式安装 Android x86 系统，具体步骤如下：</p>\n<h2 id=\"第一步：创建虚拟机\"><a href=\"#第一步：创建虚拟机\" class=\"headerlink\" title=\"第一步：创建虚拟机\"></a>第一步：创建虚拟机</h2><p>这里不过多阐述，这里直接按照提示设置个 2GB 内存，32GB 硬盘的虚拟机就可以了。（当然可以更改其它配置）</p>\n<p>需要注意的是，在设置客户机操作系统时，选择 linux → 其他 Linux 5.x 内核 64 位</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/0.jpg\"></p>\n<h2 id=\"第二步：安装系统到本地硬盘\"><a href=\"#第二步：安装系统到本地硬盘\" class=\"headerlink\" title=\"第二步：安装系统到本地硬盘\"></a>第二步：安装系统到本地硬盘</h2><p>启动虚拟机后，出现如下图所示，请选择【Installlation - Install Android-×86 to hard disk】。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/1.jpg\"></p>\n<p>在如下图的提示中，通过方向键 <code>↑</code>、<code>↓</code>，选择 <code>Create/Modify partitions</code>，即创建一个分区。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/2.jpg\"></p>\n<p>在此步选择 <code>No</code>，进入 cfdisk 工具。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/3.jpg\"></p>\n<p>在如下图操作中，请使用方向键 <code>↑</code>、<code>↓</code>、<code>←</code>、<code>→</code> 以及 <code>Enter</code> 键，按照如下顺序依次设置：</p>\n<p><strong>注意：这是针对虚拟机的分区设置</strong></p>\n<ol>\n<li>选择 <code>New</code>，创建一个新分区；</li>\n<li>选择 <code>Primary</code>，设置为主分区，空间大小可使用默认；<strong>（注意：1 GB &#x3D; 1024 MB）</strong></li>\n<li>选择 <code>Bootable</code>，设置为启动分区，此时 <code>Flags</code> 一列会显示 <code>Boot</code> 字样； </li>\n<li>选择 <code>Write</code>，确认分区设置；</li>\n<li>选择 <code>Quit</code>，退出 cfdisk 工具。</li>\n</ol>\n<p>如下图为分区设置完成后的样子。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/4.jpg\"></p>\n<p>在分区设置完成后，请直接选择【sda1】分区以进行格式化分区。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/5.jpg\"></p>\n<p>在如下两张图中，首先先选择 <code>ext4</code> 文件系统，然后再选择 <code>Yes</code>，确认格式化。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/6.jpg\"></p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/7.jpg\"></p>\n<p>等待格式化完成后即可。</p>\n<p>弹出如下图所示的提示时，选择 <code>Yes</code>；</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/8.jpg\"></p>\n<p>在如下图的问题中，继续选择 <code>Yes</code>，此步将会在 <code>/system</code> 分区中安装 Grub 引导程序。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/9.jpg\"></p>\n<p>等待安装完成后，选择 【Reboot】 重启虚拟机。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/10.jpg\"></p>\n<h2 id=\"第三步：配置启动项\"><a href=\"#第三步：配置启动项\" class=\"headerlink\" title=\"第三步：配置启动项\"></a>第三步：配置启动项</h2><p>当系统初次进入 Grub 程序时，请先选择第二项以进入 Debug 模式。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/11.jpg\"></p>\n<p>等待进入 Debug 模式后，请多次按下 <code>Enter</code> 键，这将会换行出现 <code>:/android # </code> 的提示符。请输入如下命令以编辑菜单项。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /mnt/grub/menu.lst</span><br></pre></td></tr></table></figure></div>\n\n<p><img loading=\"lazy\" src=\"/images/2024/0614/12.jpg\"></p>\n<p>在编辑器中，找到如下图所示的标注，并在此处添加 <code>nomodeset</code> 参数。</p>\n<p>最后，请依次按下 <code>Esc</code>，并输入 <code>:wq</code> 最后再按下 <code>Enter</code> 键即可。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/13.jpg\"></p>\n<p>退出编辑器后，请直接按下键盘快捷键 <code>Ctrl</code> + <code>Alt</code> + <code>Delete</code> 键，以直接重启。</p>\n<p><strong>需要注意的是</strong>：在 VMware 虚拟机中，<strong>你需要按下 <code>Ctrl</code> + <code>Alt</code> + <code>Insert</code> 键</strong>才能避免在 Windows 中弹出安全选项。</p>\n<h2 id=\"第四步：完成初次配置\"><a href=\"#第四步：完成初次配置\" class=\"headerlink\" title=\"第四步：完成初次配置\"></a>第四步：完成初次配置</h2><p>当系统重启后，在 grub 启动菜单上选择第一项以启动 Android x86 系统。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/11.jpg\"></p>\n<p>等待启动，就会出现如下图：</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/14.jpg\"></p>\n<p>然后，根据如下图进行初次配置：</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/15.jpg\"></p>\n\n  <div class=\"note-large red\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-circle-info\"></i><p>注意</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>配置 Wifi 界面时，请先跳过此步。否则 Google 将会自动检查更新。<strong>（在国内的网络环境下，这一步非常容易耗时）</strong></p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/16.jpg\"></p>\n\n    </div>\n  </div>\n\n\n  <div class=\"note-large yellow\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-lightbulb\"></i><p>如何连接网络？</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>在 Android x86 系统中，默认情况下是没有网络连接的，你需要手动转到【设置】→ 【WLAN】，并连接即可。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/17.jpg\"></p>\n<p>如上图所示，若你使用的是 VMware 虚拟机，仅需连接虚拟 WIFI 即可上网。</p>\n\n    </div>\n  </div>\n\n<h1 id=\"桌面展示\"><a href=\"#桌面展示\" class=\"headerlink\" title=\"桌面展示\"></a>桌面展示</h1><p>在 Android x86 系统中，提供了两种主屏幕页面展示，一个是适用于平板电脑或手机的 🏠 <i>QuickStep</i>，另一个则是适合电脑 PC 的任务栏。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/18.jpg\"></p>\n<p><img loading=\"lazy\" src=\"/images/2024/0614/19.jpg\"></p>\n<h1 id=\"键盘快捷键\"><a href=\"#键盘快捷键\" class=\"headerlink\" title=\"键盘快捷键\"></a>键盘快捷键</h1><p>在 Android x86 系统中，有一些常用的快捷键，如下：</p>\n<ul>\n<li><p><i class=\"fa-brands fa-windows\"></i> <code>Win</code>：⚪ 回到桌面</p>\n</li>\n<li><p><i class=\"fa-brands fa-windows\"></i> <code>Win</code> + <code>Backspace</code> ：◀ 返回到上一页</p>\n</li>\n<li><p>⬜ 切换应用：</p>\n<ul>\n<li><p><code>Alt</code> + <code>Tab</code>：切换应用窗口</p>\n</li>\n<li><p><code>Alt</code> + <code>Shift</code> + <code>Tab</code>：反向切换引用</p>\n</li>\n<li><p>💡<strong>Tips：</strong>先按下 <code>Alt</code> + <code>Tab</code> 快捷键选择一个应用窗口，松开 <code>Tab</code> 键并保持 <code>Alt</code> 键不放，最后再按住 <code>Backspace</code> 键，即可关闭当前应用窗口。</p>\n</li>\n</ul>\n</li>\n<li><p><code>Ctrl</code> + <code>Alt</code> + <code>Delete</code>：弹出电源选项，其中还包含【屏幕截图】功能</p>\n</li>\n</ul>\n<p>在虚拟机中，你需要按下 <code>Ctrl</code> + <code>Alt</code> + <code>Insert</code> 键，以避免在 Windows 中弹出安全选项。</p>\n<h1 id=\"体验感受\"><a href=\"#体验感受\" class=\"headerlink\" title=\"体验感受\"></a>体验感受</h1><p>Android x86 系统的体验与原生版本的 Android 系统差别不大，但由于<strong>系统是运行在虚拟机中，所以性能上有所损失</strong>。</p>\n<p>对于喜欢折腾的人来说，Android x86 系统是一个不错的选择。</p>\n",
            "tags": [
                "新手向",
                "系统体验",
                "Android"
            ]
        },
        {
            "id": "https://catisnotfound.github.io/2024/05/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E7%94%A8%E6%89%8B%E6%9C%BA%E6%9B%B4%E6%96%B0Hexo%E5%8D%9A%E5%AE%A2/",
            "url": "https://catisnotfound.github.io/2024/05/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E7%94%A8%E6%89%8B%E6%9C%BA%E6%9B%B4%E6%96%B0Hexo%E5%8D%9A%E5%AE%A2/",
            "title": "搭建个人博客（三）：用 Android 手机更新 Hexo 博客",
            "date_published": "2024-05-27T02:18:00.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>现如今，Hexo 博客已经成为一个非常流行的博客框架，但是 Hexo 博客的更新通常需要通过命令行操作，对于不擅长命令行操作的小白来说，更新博客就显得十分麻烦。本文将介绍仅适用于 Android 的软件，帮助你在手机上轻松地更新 Hexo 博客。</p>\n<h1 id=\"备份博客存档\"><a href=\"#备份博客存档\" class=\"headerlink\" title=\"备份博客存档\"></a>备份博客存档</h1><p>首先，在利用手机之前，首先就是在自己的电脑上<strong>备份自己的博客</strong>。</p>\n<p>（PS: 如果不是在电脑上写 Hexo 博客，请当博主没说~ o(*￣▽￣*)o）</p>\n<p>在此，请直接在 Github 上<a href=\"https://github.com/new\"><strong>新建一个公共仓库（Public Repository）</strong></a>，将自己的博客上传到 Github 中。</p>\n<p>假设：你已在 Github 上新建了一个名为 <code>blogBackup</code> 的公共仓库，那么你应当在命令行下，执行如下命令：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;20210412&quot;</span> <span class=\"comment\"># 此处建议填写上传时间，如：20210412&quot;</span></span><br><span class=\"line\">git remote add origin https://github.com/yourname/blogBackup.git</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>注意：请将第4行中的 Git 仓库地址替换自己实际的 Github 仓库地址。</strong></p>\n<p>当你完成以上这些命令后，请回到你新建好的 Github 公共仓库以确认上传成功。</p>\n<h1 id=\"WeBlog\"><a href=\"#WeBlog\" class=\"headerlink\" title=\"WeBlog\"></a>WeBlog</h1>\n  <div class=\"note-large blue\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-book\"></i><p>软件简介</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>WeBlog 是一个运行在安卓的静态博客编写器，他提供从编写，构建到预览预览博客的能力，同时包含GIT，终端，自定义 Shell 脚本等功能。 新建文章，标签管理，现代化的UI，可以提供更好博客编写的体验。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0527/banner.jpg\"></p>\n\n    </div>\n  </div>\n\n<h2 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h2><p><strong>注意：WeBlog 目前仅支持 Android 系统</strong></p>\n<p>请直接点击下面链接，选择 Arm64 架构的安装包下载并安装。</p>\n<a class=\"button  center large\" href='https://github.com/PangBaiWork/WeBlog/releases' title='点击这里下载软件'><i class='fa-brands fa-github'></i> 点击这里下载软件</a>\n\n<h2 id=\"导入博客\"><a href=\"#导入博客\" class=\"headerlink\" title=\"导入博客\"></a>导入博客</h2><p>打开 WeBlog 后，<strong>请务必安装 Hexo 框架及外部存储权限申请</strong>。</p>\n<p>在主页上点击 <code>拉取项目</code>，输入你的 Github 上的仓库地址。</p>\n\n  <div class=\"note-large red\">\n    <div class=\"notel-title rounded-t-lg p-3 font-bold text-lg flex flex-row gap-2 items-center\">\n      <i class=\"notel-icon fa-solid fa-solid fa-circle-info\"></i><p>注意</p>\n\n    </div>\n    <div class=\"notel-content\">\n      <p>这里并非填你的 Github Pages 仓库地址，而是填写你的<strong>备份博客的仓库地址</strong> （类似于：<code>https://github.com/yourname/blogBackup.git</code>，否则无法识别到 Hexo 博客项目。</p>\n\n    </div>\n  </div>\n\n<p>接着，在选择文件夹时，<strong>请一定要新建一个空的文件夹</strong>，否则无法拉取 Github 仓库项目。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0527/1.jpg\"></p>\n<p>最后，请耐心等待加载，一般需要几分钟才能完成克隆。</p>\n<h2 id=\"写博客\"><a href=\"#写博客\" class=\"headerlink\" title=\"写博客\"></a>写博客</h2><p><strong>1. 定位你的博客文章目录</strong></p>\n<p>在写博客之前，若需要找到你之前所写的文章，请直接打开你的项目源目录，依次点击 <code>source</code> → <code>_posts</code> 文件夹，在此目录下，你将看到你之前所写的所有博客文章。</p>\n<p><strong>2. 新建博客文章</strong></p>\n<p>点击右下角的 <code>+</code> 号，按照提示填写文章基本信息即可完成创建。</p>\n<p>或者直接在终端下执行如下命令：</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure></div>\n\n<p><img loading=\"lazy\" src=\"/images/2024/0527/2.jpg\"></p>\n<p><strong>3. 尽情写作吧！</strong></p>\n<h2 id=\"好用的脚本文件\"><a href=\"#好用的脚本文件\" class=\"headerlink\" title=\"好用的脚本文件\"></a>好用的脚本文件</h2><p>为了方便编辑或更新博客，请根据自己的需求，在项目源目录的 <code>.scripts</code> 文件夹下添加 Shell 脚本，以便减少不必要的操作。</p>\n<ul>\n<li><code>update-to-github-pages.sh</code>：用于将本地博客更新到 Github Pages 仓库。</li>\n</ul>\n<p>注意：这将会一次性将博客的所有文件上传到 Github Pages 仓库，并覆盖掉原有的文件。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li><code>backup-your-blog.sh</code>：用于将博客存档上传到 Github 仓库中。</li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\"><span class=\"comment\"># 这将会自动生成当前日期作为备份的备注。如：20210412</span></span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;<span class=\"subst\">$(date +%Y%m%d)</span>&quot;</span> </span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure></div>\n\n<ul>\n<li><code>setup-your-git.sh</code>：用于配置 Git 全局参数。<strong>（建议导入博客后，执行一次）</strong></li>\n</ul>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">git config --global user.name <span class=\"string\">&quot;yourname&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;youremail@gmail.com&quot;</span></span><br><span class=\"line\">git config --global --add safe.directory <span class=\"variable\">$PWD</span></span><br></pre></td></tr></table></figure></div>\n\n<p>这里需要修改 <code>yourname</code> 和 <code>youremail@gmail.com</code> 为你的实际用户名和邮箱。</p>\n<p>当你不确定是否配置成功时，可以尝试在终端下单独执行如下命令查看参数是否生效。</p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name</span><br><span class=\"line\">git config --global user.email</span><br><span class=\"line\">git config --global safe.directory</span><br></pre></td></tr></table></figure></div>\n\n<hr>\n<h1 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h1><div class=\"tabs\" id=\"tab-question_answer\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#question_answer-1\">💡 常见问题一</a></li><li class=\"tab\"><a class=\"#question_answer-2\">💡 常见问题二</a></li><li class=\"tab\"><a class=\"#question_answer-3\">💡 常见问题三</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"question_answer-1\"><p>Q：为什么拉取项目后，打开自建的文件夹仍是空的？</p>\n<p>A：请检查你的远程 Github 仓库是否为私人仓库，若为私人仓库（Private），请将该仓库转换为公共仓库（Public）。</p>\n<p><img loading=\"lazy\" src=\"/images/2024/0513/6.jpg\"></p>\n<p><img loading=\"lazy\" src=\"/images/2024/0513/7.jpg\"></p></div><div class=\"tab-pane\" id=\"question_answer-2\"><p>Q：当我拉取完项目后，为什么提示找不到 Hexo 框架？</p>\n<p>即使用【实时预览】时，直接出现 <code>The LivePreview is ended.</code> 提示。</p>\n<p>A：在解决此问题前，请先查看你的项目源目录下是否有 <code>node_modules</code> 目录。一般情况下，当你备份博客存档时，<code>node_modules</code> 目录往往不会被上传到 Github 仓库。</p>\n<p>请直接从底部界面向上滑动，打开终端，并执行 <code>npm install</code> 命令，等待安装依赖即可。</p></div><div class=\"tab-pane\" id=\"question_answer-3\"><p>Q：执行 <code>npm install</code> 命令时报错？</p>\n<p>A：在确认此问题前，请按照如下方式排查：</p>\n<p>方法一：检查你的项目源目录是否有 <code>package.json</code> 文件。</p>\n<p>若你的项目源目录下没有 <code>package.json</code> 文件，则需要执行 <code>npm init</code> 命令，并按照提示输入相关信息。</p>\n<p>方法二：将 <code>node_modules</code> 目录复制到你的项目目录中。</p>\n<p>为了方便操作，这里作者建议：直接在你的项目源目录下新建一个 <code>install.sh</code> 文件并编辑，</p>\n<p>这里假设你的 Github 仓库名为 <code>blogBackup</code>，<strong>注意替换自己的 Github 仓库地址。</strong></p>\n<div class=\"highlight-container\" data-rel=\"Bash\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># install.sh</span></span><br><span class=\"line\"><span class=\"comment\"># 一次性执行脚本</span></span><br><span class=\"line\"><span class=\"comment\"># 可直接克隆博客存档到本地项目中</span></span><br><span class=\"line\"><span class=\"comment\"># 用于解决无法安装 Hexo 依赖问题</span></span><br><span class=\"line\">BLOG_DIR=<span class=\"variable\">$PWD</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d ~/blogBackup ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;→ 正在克隆……&quot;</span></span><br><span class=\"line\">    git <span class=\"built_in\">clone</span> https://github.com/yourname/blogBackup.git <span class=\"comment\"># 此处需替换为你的 Github 仓库地址</span></span><br><span class=\"line\">    <span class=\"built_in\">cd</span> blogBackup</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;→ 正在合并……&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">cd</span> blogBackup</span><br><span class=\"line\">    git pull</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;❌ 无法拉取仓库！&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 255</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [  ! -d node_modules ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;→ 正在安装依赖....&quot;</span></span><br><span class=\"line\">    npm install</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;❌ 下载/安装依赖失败！&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 255</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r node_modules <span class=\"variable\">$BLOG_DIR</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意：</span></span><br><span class=\"line\"><span class=\"comment\"># 其中的第10行的git仓库地址替换为实际的仓库地址。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 若需要调试于终端之上，请执行：</span></span><br><span class=\"line\"><span class=\"comment\"># bash ./.scripts/install.sh</span></span><br></pre></td></tr></table></figure></div>\n\n<p><img loading=\"lazy\" src=\"/images/2024/0527/3.jpg\"></p>\n<p>完成脚本执行后，执行 <code>npm list</code> 查看是否包含 <code>hexo</code> 依赖即可。</p></div></div></div>\n\n<hr>\n<p>以上是本篇文章的全部内容，若在使用过程中遇到问题，请在评论区留言。</p>\n",
            "tags": [
                "Git",
                "Github",
                "博客搭建",
                "Hexo",
                "软件安利",
                "Android"
            ]
        }
    ]
}