{
    "version": "https://jsonfeed.org/version/1",
    "title": "CatIsNotFound • All posts by \"💡解题\" tag",
    "description": "一个基于 Hexo 框架的个人博客网站",
    "home_page_url": "https://CatIsNotFound.github.io",
    "items": [
        {
            "id": "https://catisnotfound.github.io/2024/09/12/Solved-%E8%B5%B5%E7%A5%9E%E7%89%9B%E7%9A%84%E6%B8%B8%E6%88%8F/",
            "url": "https://catisnotfound.github.io/2024/09/12/Solved-%E8%B5%B5%E7%A5%9E%E7%89%9B%E7%9A%84%E6%B8%B8%E6%88%8F/",
            "title": "[Solved] 赵神牛的游戏（解题历程）",
            "date_published": "2024-09-12T11:14:09.000Z",
            "content_html": "<a class=\"button  center large\" href=\"https://www.luogu.com.cn/problem/P2006\" title=\"点击这里查看题目来源\"><i class=\"fas fa-link\"></i> 点击这里查看题目来源</a>\n\n<h1 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h1><p>这是我有史以来第一次做过最烦的题目(<em>虽然这是入门级别的难度</em>)。如果你已做过此题目并看到此篇题解，请跳过此篇，这是作者解题时的心路历程。</p>\n<h1 id=\"解题历程\"><a href=\"#解题历程\" class=\"headerlink\" title=\"解题历程\"></a>解题历程</h1><h2 id=\"第一次\"><a href=\"#第一次\" class=\"headerlink\" title=\"第一次\"></a>第一次</h2><h3 id=\"审题-敲码\"><a href=\"#审题-敲码\" class=\"headerlink\" title=\"审题 & 敲码\"></a>审题 &amp; 敲码</h3><p>在还未完全读完整个题目的情况下，单看题目中所给的输入样本和输出样本。认为这道题目的输出只需要判断赵神牛能否打败 Boss 即可（是则输出为 <code>1</code>，不能则输出 <code>-1</code>）。</p>\n<p>如第一个输入样例与第二个输入样例：</p>\n<blockquote>\n<p><strong>样例输入 #1</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100 3 5000</span><br><span class=\"line\">20 1000</span><br><span class=\"line\">90 1</span><br><span class=\"line\">110 10000</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>样例输出 #1</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>样例输入 #2</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">50 4 10</span><br><span class=\"line\">60 100</span><br><span class=\"line\">70 1000</span><br><span class=\"line\">80 1000</span><br><span class=\"line\">90 0</span><br></pre></td></tr></table></figure></div>\n\n<p><strong>样例输出 #2</strong></p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1</span><br></pre></td></tr></table></figure></div>\n</blockquote>\n<p>随后，我就根据题目定义两个数组 <code>spend_a</code>, <code>spend_b</code>，分别存放了赵神牛的法力消耗与使用技能时的伤害值。于是就有了如下代码：</p>\n<div class=\"highlight-container\" data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> {</span><br><span class=\"line\">    <span class=\"comment\">// k: 法力值，m: 技能数，n: boss_HP</span></span><br><span class=\"line\">    <span class=\"type\">int</span> k, m, n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d %d\"</span>, &amp;k, &amp;m, &amp;n);</span><br><span class=\"line\">    <span class=\"comment\">// a: 耗费法力，b: 造成伤害</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"comment\">// 定义主角可用的技能</span></span><br><span class=\"line\">    <span class=\"type\">int</span> spend_magic[<span class=\"number\">255</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 定义主角可用的技能</span></span><br><span class=\"line\">    <span class=\"type\">int</span> can_use_skill = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// boss 受到的伤害</span></span><br><span class=\"line\">    <span class=\"type\">int</span> get_hurt[<span class=\"number\">255</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 循环输入 m 个技能</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) {</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>, &amp;a, &amp;b);</span><br><span class=\"line\">        <span class=\"comment\">// 假如有足够的法力值以使用此技能</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k &gt; a)</span><br><span class=\"line\">        {</span><br><span class=\"line\">            spend_magic[i] = a;</span><br><span class=\"line\">            get_hurt[i] = b;</span><br><span class=\"line\">            can_use_skill++;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 假如主角没有足够的法力值使用任何技能</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (can_use_skill &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"-1\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 与 Boss 决斗</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; can_use_skill; i++)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (k &gt; <span class=\"number\">0</span> || n &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        {</span><br><span class=\"line\">            k -= spend_magic[i];</span><br><span class=\"line\">            n -= get_hurt[i];</span><br><span class=\"line\">        }</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        {</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        }   </span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"-1\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>正当我信誓旦旦的写出了代码之后，提交到 OJ 评判，最终得到了大量的<strong>RE【Runtime Error】</strong>报错，甚至还有一两个<strong>TLE【Time Limit Exceeded】</strong>报错。</p>\n<h3 id=\"错误分析\"><a href=\"#错误分析\" class=\"headerlink\" title=\"错误分析\"></a>错误分析</h3><p><strong>之一：返回值不应当是任何数，只能为 0</strong></p>\n<p>翻看代码，发现 <code>main()</code> 函数中的返回值(<code>return X</code>)中的 <code>X</code> 都被我定义成 <code>-1</code> 或 <code>1</code>，导致出现 <strong>RE</strong>;</p>\n<p>后来才知道，<strong>C 语言中的 <code>main()</code> 函数的返回值应当以 <code>0</code> 的方式正常退出即可。</strong></p>\n<p><strong>之二：运行时间过长导致超出时间限制</strong></p>\n<p>解决此问题，最先应当解决的就是含有 <code>for</code> 与 <code>while</code> 循环的部分了；其次，<br>就是删除多余的循环。</p>\n<h2 id=\"第一次-Again\"><a href=\"#第一次-Again\" class=\"headerlink\" title=\"第一次 Again\"></a>第一次 Again</h2><h3 id=\"修改-敲码\"><a href=\"#修改-敲码\" class=\"headerlink\" title=\"修改 & 敲码\"></a>修改 &amp; 敲码</h3><p>经过了重重修改并反复提交之后，敲出了如下代码：</p>\n<div class=\"highlight-container\" data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> {</span><br><span class=\"line\">    <span class=\"comment\">// k: 法力值，m: 技能数，n: boss_HP</span></span><br><span class=\"line\">    <span class=\"type\">int</span> k, m, n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d %d\"</span>, &amp;k, &amp;m, &amp;n);</span><br><span class=\"line\">    <span class=\"comment\">// a: 耗费法力，b: 造成伤害</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"type\">int</span> spend_a[<span class=\"number\">30000</span>], spend_b[<span class=\"number\">30000</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 循环输入 m 个技能</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) {</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>, &amp;a, &amp;b);</span><br><span class=\"line\">        spend_a[i] = a;</span><br><span class=\"line\">        spend_b[i] = b;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"comment\">// 假如有足够的法力值以使用此技能</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k &gt; spend_a[i]) {</span><br><span class=\"line\">            <span class=\"comment\">// 与 Boss 决斗</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (k / spend_a[i] * spend_b[i] &gt;= n)</span><br><span class=\"line\">            {</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"-1\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>没错，这次的代码优化了许多。提交之后，虽然没有出现任何的<strong>RE</strong>和<strong>TLE</strong>报错，<strong>但出现了大量的 WA 报错</strong>。😂😂😂</p>\n<p>很难想到，这究竟在哪里出了问题。</p>\n<h2 id=\"第二次\"><a href=\"#第二次\" class=\"headerlink\" title=\"第二次\"></a>第二次</h2><h3 id=\"在解题路上摸爬滚打，终于找到原因\"><a href=\"#在解题路上摸爬滚打，终于找到原因\" class=\"headerlink\" title=\"在解题路上摸爬滚打，终于找到原因\"></a>在解题路上摸爬滚打，终于找到原因</h3><p>基于第一次的代码，反复修改，并没有找到原因。在经历了长达4个小时的头脑风暴后，我还是毅然决然地选择<del>放弃(bushi)</del>请教拥有ACM竞赛经验的同学。他大致看了我所写的代码，指出了许多的小问题。</p>\n<p>在经历了多番的教导与纠错之下，我<strong>成功地推翻了之前的所有代码</strong>，<strong>重新审题并整理了一遍思路</strong>，反反复复地修改和优化代码。于是，就得到了相对最接近答案的代码：</p>\n<div class=\"highlight-container\" data-rel=\"C\"><figure class=\"iseeu highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">{</span><br><span class=\"line\">    <span class=\"comment\">// k: 法力值，m: 技能数，n: boss_HP, </span></span><br><span class=\"line\">    <span class=\"comment\">// can_defeat: 可以打boss的技能数量, </span></span><br><span class=\"line\">    <span class=\"comment\">// answer: 可以打boss的技能编号</span></span><br><span class=\"line\">    <span class=\"type\">int</span> k, m, n, can_defeat = <span class=\"number\">0</span>; <span class=\"type\">int</span> answer[<span class=\"number\">30000</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d %d\"</span>, &amp;k, &amp;m, &amp;n);</span><br><span class=\"line\">    <span class=\"comment\">// a: 耗费法力，b: 造成伤害</span></span><br><span class=\"line\">    <span class=\"type\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d %d\"</span>, &amp;a, &amp;b);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a == <span class=\"number\">0</span> &amp;&amp; b &gt; <span class=\"number\">0</span>) <span class=\"comment\">// 这里是为了解决除数为 0 的情况</span></span><br><span class=\"line\">        {</span><br><span class=\"line\">            answer[can_defeat] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">            can_defeat++;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (b * (k / a) &gt;= n)</span><br><span class=\"line\">        {</span><br><span class=\"line\">            answer[can_defeat] = i + <span class=\"number\">1</span>; </span><br><span class=\"line\">            can_defeat++;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; can_defeat; i++)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; can_defeat - <span class=\"number\">1</span>)</span><br><span class=\"line\">        {</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d,\"</span>, answer[i]);</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        {</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, answer[i]);</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (can_defeat == <span class=\"number\">0</span>)</span><br><span class=\"line\">    {</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"-1\"</span>);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure></div>\n\n<p>其中上述代码作出的修改点有：</p>\n<ol>\n<li><p>删除了 <code>spend_a</code> 和 <code>spend_b</code> 这两个数组，因为不需要记录技能的消耗和伤害值，只需要判断是否可以打 boss 即可。</p>\n</li>\n<li><p>在 <code>for</code> 循环中，判断是否可以打 boss 的条件由 <code>k / spend_a[i] * spend_b[i] &gt;= n</code> 改为 <code>b * (k / a) &gt;= n</code>，因为 <code>k / spend_a[i] * spend_b[i]</code> 可能会因为除数太小而溢出。</p>\n</li>\n<li><p>在 <code>for</code> 循环中，判断是否可以打 boss 的条件由 <code>k &gt; spend_a[i]</code> 改为 <code>a == 0 &amp;&amp; b &gt; 0</code>，因为当 <code>a == 0 &amp;&amp; b &gt; 0</code> 时，说明是 <code>k</code> 无法消耗，但 <code>b</code> 可以造成伤害，此时可以打 boss。</p>\n</li>\n</ol>\n<h3 id=\"经历了漫长的解题抗争之后，才发现的小问题\"><a href=\"#经历了漫长的解题抗争之后，才发现的小问题\" class=\"headerlink\" title=\"经历了漫长的解题抗争之后，才发现的小问题\"></a>经历了漫长的解题抗争之后，才发现的小问题</h3><p>正当以为终于可以解开这道题<del>（<strong>解开了，又没完全解开</strong>）</del>的时候，结果仍然是<strong>WA</strong>。我经历了无数次毫无意义的修改和调试，还是没能发现问题所在。</p>\n<p>最后，同学仔细查看了我所写的代码之后，才发现了问题所在：<strong>没有仔细审题！！！</strong></p>\n<p>是的，这问题<u><strong>我从头到尾都没有注意过</strong></u>，就是<strong>输出多个技能序列时分隔的问题</strong>。我的代码中是用 <code>,</code> 隔开，而题目中的输出要求是用<strong>空格</strong>隔开。</p>\n<p>终于终于，我最后一次提交了正确的代码，终于全部通过了😭😭😭~~~~</p>\n",
            "tags": [
                "💡解题",
                "C/C++",
                "解题历程"
            ]
        },
        {
            "id": "https://catisnotfound.github.io/2024/09/12/Solved-%E3%80%90MC%E7%94%9F%E5%AD%98%E3%80%91%E6%8F%92%E7%81%AB%E6%8A%8A/",
            "url": "https://catisnotfound.github.io/2024/09/12/Solved-%E3%80%90MC%E7%94%9F%E5%AD%98%E3%80%91%E6%8F%92%E7%81%AB%E6%8A%8A/",
            "title": "[Solved] 【MC生存】插火把",
            "date_published": "2024-09-12T09:50:02.000Z",
            "content_html": "\n<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"3eac0c4217641b091adaa5c91ec09922ed378c63ddf9940a6c6d1ffde61e7ee0\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-swup-reload-script src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "💡解题",
                "C/C++"
            ]
        },
        {
            "id": "https://catisnotfound.github.io/2024/09/11/%E8%A7%A3%E9%A2%98-%E5%88%B7%E9%A2%98%EF%BC%9A%E6%96%B0%E5%A2%9E%E5%88%86%E7%B1%BB/",
            "url": "https://catisnotfound.github.io/2024/09/11/%E8%A7%A3%E9%A2%98-%E5%88%B7%E9%A2%98%EF%BC%9A%E6%96%B0%E5%A2%9E%E5%88%86%E7%B1%BB/",
            "title": "解题/刷题：新增分类",
            "date_published": "2024-09-11T14:14:42.000Z",
            "content_html": "<h1 id=\"这是什么新分类？\"><a href=\"#这是什么新分类？\" class=\"headerlink\" title=\"这是什么新分类？\"></a>这是什么新分类？</h1><p>这是最新的分类——解题&#x2F;刷题，主要用于记录刷题过程中遇到的问题与解题思路。目前使用的编程语言主要为 C 语言。题目会从网络途径获取。</p>\n<p><strong>注意：不是每个题目都会以博客的形式发布！</strong></p>\n<h1 id=\"为什么要新增一个分类？\"><a href=\"#为什么要新增一个分类？\" class=\"headerlink\" title=\"为什么要新增一个分类？\"></a>为什么要新增一个分类？</h1><p>一方面，是为了能够快速找到适合自己的题目（<strong>适合自己的难度</strong>）；另一方面，为了能够记录刷题过程中遇到的问题与解题思路，方便自己以后查阅。</p>\n<h1 id=\"题目从何而来？\"><a href=\"#题目从何而来？\" class=\"headerlink\" title=\"题目从何而来？\"></a>题目从何而来？</h1><p>主要有以下几个途径：</p>\n<ul>\n<li><p><a class=\"link\"   href=\"https://www.luogu.com.cn/\" >洛谷 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>: 一个目前正在刷题的网站；</p>\n</li>\n<li><p><a class=\"link\"   href=\"https://pintia.cn/problem-sets/dashboard\" >PTA在线平台 <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>: 一个非常适合入门编程语言的刷题网站，非常适合从此刻入门；</p>\n</li>\n<li><p><a class=\"link\"   href=\"https://codeforces.com/\" >Codeforces <i class=\"fa-regular fa-arrow-up-right-from-square fa-sm\"></i></a>: 适合用于备战 ACM 国际大学生程序设计竞赛的刷题网站；</p>\n</li>\n</ul>\n<p>目前暂时会更新以上平台的题目。</p>\n",
            "tags": [
                "💡解题",
                "刷题"
            ]
        }
    ]
}